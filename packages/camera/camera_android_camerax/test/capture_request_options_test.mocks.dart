// Mocks generated by Mockito 5.4.4 from annotations
// in camera_android_camerax/test/capture_request_options_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:camera_android_camerax/src/camerax_library.g.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

import 'test_camerax_library.g.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeObject_0 extends _i1.SmartFake implements Object {
  _FakeObject_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [CaptureRequestOption].
///
/// See the documentation for Mockito's code generation for more information.
class MockCaptureRequestOption extends _i1.Mock
    implements _i2.CaptureRequestOption {
  MockCaptureRequestOption() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.CaptureRequestKeySupportedType get key => (super.noSuchMethod(
        Invocation.getter(#key),
        returnValue: _i2.CaptureRequestKeySupportedType.controlAeLock,
      ) as _i2.CaptureRequestKeySupportedType);

  @override
  set key(_i2.CaptureRequestKeySupportedType? _key) => super.noSuchMethod(
        Invocation.setter(
          #key,
          _key,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set value(String? _value) => super.noSuchMethod(
        Invocation.setter(
          #value,
          _value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Object encode() => (super.noSuchMethod(
        Invocation.method(
          #encode,
          [],
        ),
        returnValue: _FakeObject_0(
          this,
          Invocation.method(
            #encode,
            [],
          ),
        ),
      ) as Object);
}

/// A class which mocks [TestCaptureRequestOptionsHostApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockTestCaptureRequestOptionsHostApi extends _i1.Mock
    implements _i3.TestCaptureRequestOptionsHostApi {
  MockTestCaptureRequestOptionsHostApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void create(
    int? identifier,
    List<_i2.CaptureRequestOption?>? options,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #create,
          [
            identifier,
            options,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [TestInstanceManagerHostApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockTestInstanceManagerHostApi extends _i1.Mock
    implements _i3.TestInstanceManagerHostApi {
  MockTestInstanceManagerHostApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void clear() => super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
