// Mocks generated by Mockito 5.4.4 from annotations
// in adsense_web_standalone/test/main.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:google_adsense/adsense.dart' as _i3;
import 'package:flutter/widgets.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeWidget_0 extends _i1.SmartFake implements _i2.Widget {
  _FakeWidget_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i2.DiagnosticLevel? minLevel = _i2.DiagnosticLevel.info}) =>
      super.toString();
}

/// A class which mocks [Adsense].
///
/// See the documentation for Mockito's code generation for more information.
class MockAdsense extends _i1.Mock implements _i3.Adsense {
  @override
  void initialize(String? adClient) => super.noSuchMethod(
        Invocation.method(
          #initialize,
          [adClient],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.Widget adView({
    required String? adClient,
    required String? adSlot,
    String? adLayoutKey = r'',
    String? adLayout = r'',
    String? adFormat = r'auto',
    bool? isAdTest = false,
    bool? isFullWidthResponsive = true,
    Map<String, String>? slotParams = const {},
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #adView,
          [],
          {
            #adClient: adClient,
            #adSlot: adSlot,
            #adLayoutKey: adLayoutKey,
            #adLayout: adLayout,
            #adFormat: adFormat,
            #isAdTest: isAdTest,
            #isFullWidthResponsive: isFullWidthResponsive,
            #slotParams: slotParams,
          },
        ),
        returnValue: _FakeWidget_0(
          this,
          Invocation.method(
            #adView,
            [],
            {
              #adClient: adClient,
              #adSlot: adSlot,
              #adLayoutKey: adLayoutKey,
              #adLayout: adLayout,
              #adFormat: adFormat,
              #isAdTest: isAdTest,
              #isFullWidthResponsive: isFullWidthResponsive,
              #slotParams: slotParams,
            },
          ),
        ),
        returnValueForMissingStub: _FakeWidget_0(
          this,
          Invocation.method(
            #adView,
            [],
            {
              #adClient: adClient,
              #adSlot: adSlot,
              #adLayoutKey: adLayoutKey,
              #adLayout: adLayout,
              #adFormat: adFormat,
              #isAdTest: isAdTest,
              #isFullWidthResponsive: isFullWidthResponsive,
              #slotParams: slotParams,
            },
          ),
        ),
      ) as _i2.Widget);
}
