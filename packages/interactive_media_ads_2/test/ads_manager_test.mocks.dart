// Mocks generated by Mockito 5.4.4 from annotations
// in interactive_media_ads/test/ads_manager_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:flutter/cupertino.dart' as _i2;
import 'package:flutter/foundation.dart' as _i3;
import 'package:interactive_media_ads/src/platform_interface/ads_request.dart'
    as _i9;
import 'package:interactive_media_ads/src/platform_interface/platform_ad_display_container.dart'
    as _i10;
import 'package:interactive_media_ads/src/platform_interface/platform_ads_loader.dart'
    as _i8;
import 'package:interactive_media_ads/src/platform_interface/platform_ads_manager.dart'
    as _i4;
import 'package:interactive_media_ads/src/platform_interface/platform_ads_manager_delegate.dart'
    as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeWidget_0 extends _i1.SmartFake implements _i2.Widget {
  _FakeWidget_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i3.DiagnosticLevel? minLevel = _i3.DiagnosticLevel.info}) =>
      super.toString();
}

/// A class which mocks [PlatformAdsManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockPlatformAdsManager extends _i1.Mock
    implements _i4.PlatformAdsManager {
  MockPlatformAdsManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<void> init(_i4.AdsManagerInitParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #init,
          [params],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> start(_i4.AdsManagerStartParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #start,
          [params],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> setAdsManagerDelegate(
          _i6.PlatformAdsManagerDelegate? delegate) =>
      (super.noSuchMethod(
        Invocation.method(
          #setAdsManagerDelegate,
          [delegate],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> destroy() => (super.noSuchMethod(
        Invocation.method(
          #destroy,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [PlatformAdsManagerDelegate].
///
/// See the documentation for Mockito's code generation for more information.
class MockPlatformAdsManagerDelegate extends _i1.Mock
    implements _i6.PlatformAdsManagerDelegate {
  MockPlatformAdsManagerDelegate() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.PlatformAdsManagerDelegateCreationParams get params =>
      (super.noSuchMethod(
        Invocation.getter(#params),
        returnValue:
            _i7.dummyValue<_i6.PlatformAdsManagerDelegateCreationParams>(
          this,
          Invocation.getter(#params),
        ),
      ) as _i6.PlatformAdsManagerDelegateCreationParams);
}

/// A class which mocks [PlatformAdsLoader].
///
/// See the documentation for Mockito's code generation for more information.
class MockPlatformAdsLoader extends _i1.Mock implements _i8.PlatformAdsLoader {
  MockPlatformAdsLoader() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.PlatformAdsLoaderCreationParams get params => (super.noSuchMethod(
        Invocation.getter(#params),
        returnValue: _i7.dummyValue<_i8.PlatformAdsLoaderCreationParams>(
          this,
          Invocation.getter(#params),
        ),
      ) as _i8.PlatformAdsLoaderCreationParams);

  @override
  _i5.Future<void> contentComplete() => (super.noSuchMethod(
        Invocation.method(
          #contentComplete,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> requestAds(_i9.AdsRequest? request) => (super.noSuchMethod(
        Invocation.method(
          #requestAds,
          [request],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [PlatformAdDisplayContainer].
///
/// See the documentation for Mockito's code generation for more information.
class MockPlatformAdDisplayContainer extends _i1.Mock
    implements _i10.PlatformAdDisplayContainer {
  MockPlatformAdDisplayContainer() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i10.PlatformAdDisplayContainerCreationParams get params =>
      (super.noSuchMethod(
        Invocation.getter(#params),
        returnValue:
            _i7.dummyValue<_i10.PlatformAdDisplayContainerCreationParams>(
          this,
          Invocation.getter(#params),
        ),
      ) as _i10.PlatformAdDisplayContainerCreationParams);

  @override
  _i2.Widget build(_i2.BuildContext? context) => (super.noSuchMethod(
        Invocation.method(
          #build,
          [context],
        ),
        returnValue: _FakeWidget_0(
          this,
          Invocation.method(
            #build,
            [context],
          ),
        ),
      ) as _i2.Widget);
}
