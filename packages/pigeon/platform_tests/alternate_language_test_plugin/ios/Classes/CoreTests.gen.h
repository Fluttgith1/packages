// Copyright 2013 The Flutter Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// Autogenerated from Pigeon, do not edit directly.
// See also: https://pub.dev/packages/pigeon

#import <Foundation/Foundation.h>

@protocol FlutterBinaryMessenger;
@protocol FlutterMessageCodec;
@class FlutterError;
@class FlutterStandardTypedData;

NS_ASSUME_NONNULL_BEGIN

typedef NS_ENUM(NSUInteger, FLTFillerEnum0) {
  FLTFillerEnum0FillerMember0 = 0,
};

/// Wrapper for FLTFillerEnum0 to allow for nullability.
@interface FLTFillerEnum0Box : NSObject
@property(nonatomic, assign) FLTFillerEnum0 value;
- (instancetype)initWithValue:(FLTFillerEnum0)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum1) {
  FLTFillerEnum1FillerMember1 = 0,
};

/// Wrapper for FLTFillerEnum1 to allow for nullability.
@interface FLTFillerEnum1Box : NSObject
@property(nonatomic, assign) FLTFillerEnum1 value;
- (instancetype)initWithValue:(FLTFillerEnum1)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum2) {
  FLTFillerEnum2FillerMember2 = 0,
};

/// Wrapper for FLTFillerEnum2 to allow for nullability.
@interface FLTFillerEnum2Box : NSObject
@property(nonatomic, assign) FLTFillerEnum2 value;
- (instancetype)initWithValue:(FLTFillerEnum2)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum3) {
  FLTFillerEnum3FillerMember3 = 0,
};

/// Wrapper for FLTFillerEnum3 to allow for nullability.
@interface FLTFillerEnum3Box : NSObject
@property(nonatomic, assign) FLTFillerEnum3 value;
- (instancetype)initWithValue:(FLTFillerEnum3)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum4) {
  FLTFillerEnum4FillerMember4 = 0,
};

/// Wrapper for FLTFillerEnum4 to allow for nullability.
@interface FLTFillerEnum4Box : NSObject
@property(nonatomic, assign) FLTFillerEnum4 value;
- (instancetype)initWithValue:(FLTFillerEnum4)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum5) {
  FLTFillerEnum5FillerMember5 = 0,
};

/// Wrapper for FLTFillerEnum5 to allow for nullability.
@interface FLTFillerEnum5Box : NSObject
@property(nonatomic, assign) FLTFillerEnum5 value;
- (instancetype)initWithValue:(FLTFillerEnum5)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum6) {
  FLTFillerEnum6FillerMember6 = 0,
};

/// Wrapper for FLTFillerEnum6 to allow for nullability.
@interface FLTFillerEnum6Box : NSObject
@property(nonatomic, assign) FLTFillerEnum6 value;
- (instancetype)initWithValue:(FLTFillerEnum6)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum7) {
  FLTFillerEnum7FillerMember7 = 0,
};

/// Wrapper for FLTFillerEnum7 to allow for nullability.
@interface FLTFillerEnum7Box : NSObject
@property(nonatomic, assign) FLTFillerEnum7 value;
- (instancetype)initWithValue:(FLTFillerEnum7)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum8) {
  FLTFillerEnum8FillerMember8 = 0,
};

/// Wrapper for FLTFillerEnum8 to allow for nullability.
@interface FLTFillerEnum8Box : NSObject
@property(nonatomic, assign) FLTFillerEnum8 value;
- (instancetype)initWithValue:(FLTFillerEnum8)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum9) {
  FLTFillerEnum9FillerMember9 = 0,
};

/// Wrapper for FLTFillerEnum9 to allow for nullability.
@interface FLTFillerEnum9Box : NSObject
@property(nonatomic, assign) FLTFillerEnum9 value;
- (instancetype)initWithValue:(FLTFillerEnum9)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum10) {
  FLTFillerEnum10FillerMember10 = 0,
};

/// Wrapper for FLTFillerEnum10 to allow for nullability.
@interface FLTFillerEnum10Box : NSObject
@property(nonatomic, assign) FLTFillerEnum10 value;
- (instancetype)initWithValue:(FLTFillerEnum10)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum11) {
  FLTFillerEnum11FillerMember11 = 0,
};

/// Wrapper for FLTFillerEnum11 to allow for nullability.
@interface FLTFillerEnum11Box : NSObject
@property(nonatomic, assign) FLTFillerEnum11 value;
- (instancetype)initWithValue:(FLTFillerEnum11)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum12) {
  FLTFillerEnum12FillerMember12 = 0,
};

/// Wrapper for FLTFillerEnum12 to allow for nullability.
@interface FLTFillerEnum12Box : NSObject
@property(nonatomic, assign) FLTFillerEnum12 value;
- (instancetype)initWithValue:(FLTFillerEnum12)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum13) {
  FLTFillerEnum13FillerMember13 = 0,
};

/// Wrapper for FLTFillerEnum13 to allow for nullability.
@interface FLTFillerEnum13Box : NSObject
@property(nonatomic, assign) FLTFillerEnum13 value;
- (instancetype)initWithValue:(FLTFillerEnum13)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum14) {
  FLTFillerEnum14FillerMember14 = 0,
};

/// Wrapper for FLTFillerEnum14 to allow for nullability.
@interface FLTFillerEnum14Box : NSObject
@property(nonatomic, assign) FLTFillerEnum14 value;
- (instancetype)initWithValue:(FLTFillerEnum14)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum15) {
  FLTFillerEnum15FillerMember15 = 0,
};

/// Wrapper for FLTFillerEnum15 to allow for nullability.
@interface FLTFillerEnum15Box : NSObject
@property(nonatomic, assign) FLTFillerEnum15 value;
- (instancetype)initWithValue:(FLTFillerEnum15)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum16) {
  FLTFillerEnum16FillerMember16 = 0,
};

/// Wrapper for FLTFillerEnum16 to allow for nullability.
@interface FLTFillerEnum16Box : NSObject
@property(nonatomic, assign) FLTFillerEnum16 value;
- (instancetype)initWithValue:(FLTFillerEnum16)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum17) {
  FLTFillerEnum17FillerMember17 = 0,
};

/// Wrapper for FLTFillerEnum17 to allow for nullability.
@interface FLTFillerEnum17Box : NSObject
@property(nonatomic, assign) FLTFillerEnum17 value;
- (instancetype)initWithValue:(FLTFillerEnum17)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum18) {
  FLTFillerEnum18FillerMember18 = 0,
};

/// Wrapper for FLTFillerEnum18 to allow for nullability.
@interface FLTFillerEnum18Box : NSObject
@property(nonatomic, assign) FLTFillerEnum18 value;
- (instancetype)initWithValue:(FLTFillerEnum18)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum19) {
  FLTFillerEnum19FillerMember19 = 0,
};

/// Wrapper for FLTFillerEnum19 to allow for nullability.
@interface FLTFillerEnum19Box : NSObject
@property(nonatomic, assign) FLTFillerEnum19 value;
- (instancetype)initWithValue:(FLTFillerEnum19)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum20) {
  FLTFillerEnum20FillerMember20 = 0,
};

/// Wrapper for FLTFillerEnum20 to allow for nullability.
@interface FLTFillerEnum20Box : NSObject
@property(nonatomic, assign) FLTFillerEnum20 value;
- (instancetype)initWithValue:(FLTFillerEnum20)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum21) {
  FLTFillerEnum21FillerMember21 = 0,
};

/// Wrapper for FLTFillerEnum21 to allow for nullability.
@interface FLTFillerEnum21Box : NSObject
@property(nonatomic, assign) FLTFillerEnum21 value;
- (instancetype)initWithValue:(FLTFillerEnum21)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum22) {
  FLTFillerEnum22FillerMember22 = 0,
};

/// Wrapper for FLTFillerEnum22 to allow for nullability.
@interface FLTFillerEnum22Box : NSObject
@property(nonatomic, assign) FLTFillerEnum22 value;
- (instancetype)initWithValue:(FLTFillerEnum22)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum23) {
  FLTFillerEnum23FillerMember23 = 0,
};

/// Wrapper for FLTFillerEnum23 to allow for nullability.
@interface FLTFillerEnum23Box : NSObject
@property(nonatomic, assign) FLTFillerEnum23 value;
- (instancetype)initWithValue:(FLTFillerEnum23)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum24) {
  FLTFillerEnum24FillerMember24 = 0,
};

/// Wrapper for FLTFillerEnum24 to allow for nullability.
@interface FLTFillerEnum24Box : NSObject
@property(nonatomic, assign) FLTFillerEnum24 value;
- (instancetype)initWithValue:(FLTFillerEnum24)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum25) {
  FLTFillerEnum25FillerMember25 = 0,
};

/// Wrapper for FLTFillerEnum25 to allow for nullability.
@interface FLTFillerEnum25Box : NSObject
@property(nonatomic, assign) FLTFillerEnum25 value;
- (instancetype)initWithValue:(FLTFillerEnum25)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum26) {
  FLTFillerEnum26FillerMember26 = 0,
};

/// Wrapper for FLTFillerEnum26 to allow for nullability.
@interface FLTFillerEnum26Box : NSObject
@property(nonatomic, assign) FLTFillerEnum26 value;
- (instancetype)initWithValue:(FLTFillerEnum26)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum27) {
  FLTFillerEnum27FillerMember27 = 0,
};

/// Wrapper for FLTFillerEnum27 to allow for nullability.
@interface FLTFillerEnum27Box : NSObject
@property(nonatomic, assign) FLTFillerEnum27 value;
- (instancetype)initWithValue:(FLTFillerEnum27)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum28) {
  FLTFillerEnum28FillerMember28 = 0,
};

/// Wrapper for FLTFillerEnum28 to allow for nullability.
@interface FLTFillerEnum28Box : NSObject
@property(nonatomic, assign) FLTFillerEnum28 value;
- (instancetype)initWithValue:(FLTFillerEnum28)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum29) {
  FLTFillerEnum29FillerMember29 = 0,
};

/// Wrapper for FLTFillerEnum29 to allow for nullability.
@interface FLTFillerEnum29Box : NSObject
@property(nonatomic, assign) FLTFillerEnum29 value;
- (instancetype)initWithValue:(FLTFillerEnum29)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum30) {
  FLTFillerEnum30FillerMember30 = 0,
};

/// Wrapper for FLTFillerEnum30 to allow for nullability.
@interface FLTFillerEnum30Box : NSObject
@property(nonatomic, assign) FLTFillerEnum30 value;
- (instancetype)initWithValue:(FLTFillerEnum30)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum31) {
  FLTFillerEnum31FillerMember31 = 0,
};

/// Wrapper for FLTFillerEnum31 to allow for nullability.
@interface FLTFillerEnum31Box : NSObject
@property(nonatomic, assign) FLTFillerEnum31 value;
- (instancetype)initWithValue:(FLTFillerEnum31)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum32) {
  FLTFillerEnum32FillerMember32 = 0,
};

/// Wrapper for FLTFillerEnum32 to allow for nullability.
@interface FLTFillerEnum32Box : NSObject
@property(nonatomic, assign) FLTFillerEnum32 value;
- (instancetype)initWithValue:(FLTFillerEnum32)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum33) {
  FLTFillerEnum33FillerMember33 = 0,
};

/// Wrapper for FLTFillerEnum33 to allow for nullability.
@interface FLTFillerEnum33Box : NSObject
@property(nonatomic, assign) FLTFillerEnum33 value;
- (instancetype)initWithValue:(FLTFillerEnum33)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum34) {
  FLTFillerEnum34FillerMember34 = 0,
};

/// Wrapper for FLTFillerEnum34 to allow for nullability.
@interface FLTFillerEnum34Box : NSObject
@property(nonatomic, assign) FLTFillerEnum34 value;
- (instancetype)initWithValue:(FLTFillerEnum34)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum35) {
  FLTFillerEnum35FillerMember35 = 0,
};

/// Wrapper for FLTFillerEnum35 to allow for nullability.
@interface FLTFillerEnum35Box : NSObject
@property(nonatomic, assign) FLTFillerEnum35 value;
- (instancetype)initWithValue:(FLTFillerEnum35)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum36) {
  FLTFillerEnum36FillerMember36 = 0,
};

/// Wrapper for FLTFillerEnum36 to allow for nullability.
@interface FLTFillerEnum36Box : NSObject
@property(nonatomic, assign) FLTFillerEnum36 value;
- (instancetype)initWithValue:(FLTFillerEnum36)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum37) {
  FLTFillerEnum37FillerMember37 = 0,
};

/// Wrapper for FLTFillerEnum37 to allow for nullability.
@interface FLTFillerEnum37Box : NSObject
@property(nonatomic, assign) FLTFillerEnum37 value;
- (instancetype)initWithValue:(FLTFillerEnum37)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum38) {
  FLTFillerEnum38FillerMember38 = 0,
};

/// Wrapper for FLTFillerEnum38 to allow for nullability.
@interface FLTFillerEnum38Box : NSObject
@property(nonatomic, assign) FLTFillerEnum38 value;
- (instancetype)initWithValue:(FLTFillerEnum38)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum39) {
  FLTFillerEnum39FillerMember39 = 0,
};

/// Wrapper for FLTFillerEnum39 to allow for nullability.
@interface FLTFillerEnum39Box : NSObject
@property(nonatomic, assign) FLTFillerEnum39 value;
- (instancetype)initWithValue:(FLTFillerEnum39)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum40) {
  FLTFillerEnum40FillerMember40 = 0,
};

/// Wrapper for FLTFillerEnum40 to allow for nullability.
@interface FLTFillerEnum40Box : NSObject
@property(nonatomic, assign) FLTFillerEnum40 value;
- (instancetype)initWithValue:(FLTFillerEnum40)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum41) {
  FLTFillerEnum41FillerMember41 = 0,
};

/// Wrapper for FLTFillerEnum41 to allow for nullability.
@interface FLTFillerEnum41Box : NSObject
@property(nonatomic, assign) FLTFillerEnum41 value;
- (instancetype)initWithValue:(FLTFillerEnum41)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum42) {
  FLTFillerEnum42FillerMember42 = 0,
};

/// Wrapper for FLTFillerEnum42 to allow for nullability.
@interface FLTFillerEnum42Box : NSObject
@property(nonatomic, assign) FLTFillerEnum42 value;
- (instancetype)initWithValue:(FLTFillerEnum42)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum43) {
  FLTFillerEnum43FillerMember43 = 0,
};

/// Wrapper for FLTFillerEnum43 to allow for nullability.
@interface FLTFillerEnum43Box : NSObject
@property(nonatomic, assign) FLTFillerEnum43 value;
- (instancetype)initWithValue:(FLTFillerEnum43)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum44) {
  FLTFillerEnum44FillerMember44 = 0,
};

/// Wrapper for FLTFillerEnum44 to allow for nullability.
@interface FLTFillerEnum44Box : NSObject
@property(nonatomic, assign) FLTFillerEnum44 value;
- (instancetype)initWithValue:(FLTFillerEnum44)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum45) {
  FLTFillerEnum45FillerMember45 = 0,
};

/// Wrapper for FLTFillerEnum45 to allow for nullability.
@interface FLTFillerEnum45Box : NSObject
@property(nonatomic, assign) FLTFillerEnum45 value;
- (instancetype)initWithValue:(FLTFillerEnum45)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum46) {
  FLTFillerEnum46FillerMember46 = 0,
};

/// Wrapper for FLTFillerEnum46 to allow for nullability.
@interface FLTFillerEnum46Box : NSObject
@property(nonatomic, assign) FLTFillerEnum46 value;
- (instancetype)initWithValue:(FLTFillerEnum46)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum47) {
  FLTFillerEnum47FillerMember47 = 0,
};

/// Wrapper for FLTFillerEnum47 to allow for nullability.
@interface FLTFillerEnum47Box : NSObject
@property(nonatomic, assign) FLTFillerEnum47 value;
- (instancetype)initWithValue:(FLTFillerEnum47)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum48) {
  FLTFillerEnum48FillerMember48 = 0,
};

/// Wrapper for FLTFillerEnum48 to allow for nullability.
@interface FLTFillerEnum48Box : NSObject
@property(nonatomic, assign) FLTFillerEnum48 value;
- (instancetype)initWithValue:(FLTFillerEnum48)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum49) {
  FLTFillerEnum49FillerMember49 = 0,
};

/// Wrapper for FLTFillerEnum49 to allow for nullability.
@interface FLTFillerEnum49Box : NSObject
@property(nonatomic, assign) FLTFillerEnum49 value;
- (instancetype)initWithValue:(FLTFillerEnum49)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum50) {
  FLTFillerEnum50FillerMember50 = 0,
};

/// Wrapper for FLTFillerEnum50 to allow for nullability.
@interface FLTFillerEnum50Box : NSObject
@property(nonatomic, assign) FLTFillerEnum50 value;
- (instancetype)initWithValue:(FLTFillerEnum50)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum51) {
  FLTFillerEnum51FillerMember51 = 0,
};

/// Wrapper for FLTFillerEnum51 to allow for nullability.
@interface FLTFillerEnum51Box : NSObject
@property(nonatomic, assign) FLTFillerEnum51 value;
- (instancetype)initWithValue:(FLTFillerEnum51)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum52) {
  FLTFillerEnum52FillerMember52 = 0,
};

/// Wrapper for FLTFillerEnum52 to allow for nullability.
@interface FLTFillerEnum52Box : NSObject
@property(nonatomic, assign) FLTFillerEnum52 value;
- (instancetype)initWithValue:(FLTFillerEnum52)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum53) {
  FLTFillerEnum53FillerMember53 = 0,
};

/// Wrapper for FLTFillerEnum53 to allow for nullability.
@interface FLTFillerEnum53Box : NSObject
@property(nonatomic, assign) FLTFillerEnum53 value;
- (instancetype)initWithValue:(FLTFillerEnum53)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum54) {
  FLTFillerEnum54FillerMember54 = 0,
};

/// Wrapper for FLTFillerEnum54 to allow for nullability.
@interface FLTFillerEnum54Box : NSObject
@property(nonatomic, assign) FLTFillerEnum54 value;
- (instancetype)initWithValue:(FLTFillerEnum54)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum55) {
  FLTFillerEnum55FillerMember55 = 0,
};

/// Wrapper for FLTFillerEnum55 to allow for nullability.
@interface FLTFillerEnum55Box : NSObject
@property(nonatomic, assign) FLTFillerEnum55 value;
- (instancetype)initWithValue:(FLTFillerEnum55)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum56) {
  FLTFillerEnum56FillerMember56 = 0,
};

/// Wrapper for FLTFillerEnum56 to allow for nullability.
@interface FLTFillerEnum56Box : NSObject
@property(nonatomic, assign) FLTFillerEnum56 value;
- (instancetype)initWithValue:(FLTFillerEnum56)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum57) {
  FLTFillerEnum57FillerMember57 = 0,
};

/// Wrapper for FLTFillerEnum57 to allow for nullability.
@interface FLTFillerEnum57Box : NSObject
@property(nonatomic, assign) FLTFillerEnum57 value;
- (instancetype)initWithValue:(FLTFillerEnum57)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum58) {
  FLTFillerEnum58FillerMember58 = 0,
};

/// Wrapper for FLTFillerEnum58 to allow for nullability.
@interface FLTFillerEnum58Box : NSObject
@property(nonatomic, assign) FLTFillerEnum58 value;
- (instancetype)initWithValue:(FLTFillerEnum58)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum59) {
  FLTFillerEnum59FillerMember59 = 0,
};

/// Wrapper for FLTFillerEnum59 to allow for nullability.
@interface FLTFillerEnum59Box : NSObject
@property(nonatomic, assign) FLTFillerEnum59 value;
- (instancetype)initWithValue:(FLTFillerEnum59)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum60) {
  FLTFillerEnum60FillerMember60 = 0,
};

/// Wrapper for FLTFillerEnum60 to allow for nullability.
@interface FLTFillerEnum60Box : NSObject
@property(nonatomic, assign) FLTFillerEnum60 value;
- (instancetype)initWithValue:(FLTFillerEnum60)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum61) {
  FLTFillerEnum61FillerMember61 = 0,
};

/// Wrapper for FLTFillerEnum61 to allow for nullability.
@interface FLTFillerEnum61Box : NSObject
@property(nonatomic, assign) FLTFillerEnum61 value;
- (instancetype)initWithValue:(FLTFillerEnum61)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum62) {
  FLTFillerEnum62FillerMember62 = 0,
};

/// Wrapper for FLTFillerEnum62 to allow for nullability.
@interface FLTFillerEnum62Box : NSObject
@property(nonatomic, assign) FLTFillerEnum62 value;
- (instancetype)initWithValue:(FLTFillerEnum62)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum63) {
  FLTFillerEnum63FillerMember63 = 0,
};

/// Wrapper for FLTFillerEnum63 to allow for nullability.
@interface FLTFillerEnum63Box : NSObject
@property(nonatomic, assign) FLTFillerEnum63 value;
- (instancetype)initWithValue:(FLTFillerEnum63)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum64) {
  FLTFillerEnum64FillerMember64 = 0,
};

/// Wrapper for FLTFillerEnum64 to allow for nullability.
@interface FLTFillerEnum64Box : NSObject
@property(nonatomic, assign) FLTFillerEnum64 value;
- (instancetype)initWithValue:(FLTFillerEnum64)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum65) {
  FLTFillerEnum65FillerMember65 = 0,
};

/// Wrapper for FLTFillerEnum65 to allow for nullability.
@interface FLTFillerEnum65Box : NSObject
@property(nonatomic, assign) FLTFillerEnum65 value;
- (instancetype)initWithValue:(FLTFillerEnum65)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum66) {
  FLTFillerEnum66FillerMember66 = 0,
};

/// Wrapper for FLTFillerEnum66 to allow for nullability.
@interface FLTFillerEnum66Box : NSObject
@property(nonatomic, assign) FLTFillerEnum66 value;
- (instancetype)initWithValue:(FLTFillerEnum66)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum67) {
  FLTFillerEnum67FillerMember67 = 0,
};

/// Wrapper for FLTFillerEnum67 to allow for nullability.
@interface FLTFillerEnum67Box : NSObject
@property(nonatomic, assign) FLTFillerEnum67 value;
- (instancetype)initWithValue:(FLTFillerEnum67)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum68) {
  FLTFillerEnum68FillerMember68 = 0,
};

/// Wrapper for FLTFillerEnum68 to allow for nullability.
@interface FLTFillerEnum68Box : NSObject
@property(nonatomic, assign) FLTFillerEnum68 value;
- (instancetype)initWithValue:(FLTFillerEnum68)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum69) {
  FLTFillerEnum69FillerMember69 = 0,
};

/// Wrapper for FLTFillerEnum69 to allow for nullability.
@interface FLTFillerEnum69Box : NSObject
@property(nonatomic, assign) FLTFillerEnum69 value;
- (instancetype)initWithValue:(FLTFillerEnum69)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum70) {
  FLTFillerEnum70FillerMember70 = 0,
};

/// Wrapper for FLTFillerEnum70 to allow for nullability.
@interface FLTFillerEnum70Box : NSObject
@property(nonatomic, assign) FLTFillerEnum70 value;
- (instancetype)initWithValue:(FLTFillerEnum70)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum71) {
  FLTFillerEnum71FillerMember71 = 0,
};

/// Wrapper for FLTFillerEnum71 to allow for nullability.
@interface FLTFillerEnum71Box : NSObject
@property(nonatomic, assign) FLTFillerEnum71 value;
- (instancetype)initWithValue:(FLTFillerEnum71)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum72) {
  FLTFillerEnum72FillerMember72 = 0,
};

/// Wrapper for FLTFillerEnum72 to allow for nullability.
@interface FLTFillerEnum72Box : NSObject
@property(nonatomic, assign) FLTFillerEnum72 value;
- (instancetype)initWithValue:(FLTFillerEnum72)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum73) {
  FLTFillerEnum73FillerMember73 = 0,
};

/// Wrapper for FLTFillerEnum73 to allow for nullability.
@interface FLTFillerEnum73Box : NSObject
@property(nonatomic, assign) FLTFillerEnum73 value;
- (instancetype)initWithValue:(FLTFillerEnum73)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum74) {
  FLTFillerEnum74FillerMember74 = 0,
};

/// Wrapper for FLTFillerEnum74 to allow for nullability.
@interface FLTFillerEnum74Box : NSObject
@property(nonatomic, assign) FLTFillerEnum74 value;
- (instancetype)initWithValue:(FLTFillerEnum74)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum75) {
  FLTFillerEnum75FillerMember75 = 0,
};

/// Wrapper for FLTFillerEnum75 to allow for nullability.
@interface FLTFillerEnum75Box : NSObject
@property(nonatomic, assign) FLTFillerEnum75 value;
- (instancetype)initWithValue:(FLTFillerEnum75)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum76) {
  FLTFillerEnum76FillerMember76 = 0,
};

/// Wrapper for FLTFillerEnum76 to allow for nullability.
@interface FLTFillerEnum76Box : NSObject
@property(nonatomic, assign) FLTFillerEnum76 value;
- (instancetype)initWithValue:(FLTFillerEnum76)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum77) {
  FLTFillerEnum77FillerMember77 = 0,
};

/// Wrapper for FLTFillerEnum77 to allow for nullability.
@interface FLTFillerEnum77Box : NSObject
@property(nonatomic, assign) FLTFillerEnum77 value;
- (instancetype)initWithValue:(FLTFillerEnum77)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum78) {
  FLTFillerEnum78FillerMember78 = 0,
};

/// Wrapper for FLTFillerEnum78 to allow for nullability.
@interface FLTFillerEnum78Box : NSObject
@property(nonatomic, assign) FLTFillerEnum78 value;
- (instancetype)initWithValue:(FLTFillerEnum78)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum79) {
  FLTFillerEnum79FillerMember79 = 0,
};

/// Wrapper for FLTFillerEnum79 to allow for nullability.
@interface FLTFillerEnum79Box : NSObject
@property(nonatomic, assign) FLTFillerEnum79 value;
- (instancetype)initWithValue:(FLTFillerEnum79)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum80) {
  FLTFillerEnum80FillerMember80 = 0,
};

/// Wrapper for FLTFillerEnum80 to allow for nullability.
@interface FLTFillerEnum80Box : NSObject
@property(nonatomic, assign) FLTFillerEnum80 value;
- (instancetype)initWithValue:(FLTFillerEnum80)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum81) {
  FLTFillerEnum81FillerMember81 = 0,
};

/// Wrapper for FLTFillerEnum81 to allow for nullability.
@interface FLTFillerEnum81Box : NSObject
@property(nonatomic, assign) FLTFillerEnum81 value;
- (instancetype)initWithValue:(FLTFillerEnum81)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum82) {
  FLTFillerEnum82FillerMember82 = 0,
};

/// Wrapper for FLTFillerEnum82 to allow for nullability.
@interface FLTFillerEnum82Box : NSObject
@property(nonatomic, assign) FLTFillerEnum82 value;
- (instancetype)initWithValue:(FLTFillerEnum82)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum83) {
  FLTFillerEnum83FillerMember83 = 0,
};

/// Wrapper for FLTFillerEnum83 to allow for nullability.
@interface FLTFillerEnum83Box : NSObject
@property(nonatomic, assign) FLTFillerEnum83 value;
- (instancetype)initWithValue:(FLTFillerEnum83)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum84) {
  FLTFillerEnum84FillerMember84 = 0,
};

/// Wrapper for FLTFillerEnum84 to allow for nullability.
@interface FLTFillerEnum84Box : NSObject
@property(nonatomic, assign) FLTFillerEnum84 value;
- (instancetype)initWithValue:(FLTFillerEnum84)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum85) {
  FLTFillerEnum85FillerMember85 = 0,
};

/// Wrapper for FLTFillerEnum85 to allow for nullability.
@interface FLTFillerEnum85Box : NSObject
@property(nonatomic, assign) FLTFillerEnum85 value;
- (instancetype)initWithValue:(FLTFillerEnum85)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum86) {
  FLTFillerEnum86FillerMember86 = 0,
};

/// Wrapper for FLTFillerEnum86 to allow for nullability.
@interface FLTFillerEnum86Box : NSObject
@property(nonatomic, assign) FLTFillerEnum86 value;
- (instancetype)initWithValue:(FLTFillerEnum86)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum87) {
  FLTFillerEnum87FillerMember87 = 0,
};

/// Wrapper for FLTFillerEnum87 to allow for nullability.
@interface FLTFillerEnum87Box : NSObject
@property(nonatomic, assign) FLTFillerEnum87 value;
- (instancetype)initWithValue:(FLTFillerEnum87)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum88) {
  FLTFillerEnum88FillerMember88 = 0,
};

/// Wrapper for FLTFillerEnum88 to allow for nullability.
@interface FLTFillerEnum88Box : NSObject
@property(nonatomic, assign) FLTFillerEnum88 value;
- (instancetype)initWithValue:(FLTFillerEnum88)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum89) {
  FLTFillerEnum89FillerMember89 = 0,
};

/// Wrapper for FLTFillerEnum89 to allow for nullability.
@interface FLTFillerEnum89Box : NSObject
@property(nonatomic, assign) FLTFillerEnum89 value;
- (instancetype)initWithValue:(FLTFillerEnum89)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum90) {
  FLTFillerEnum90FillerMember90 = 0,
};

/// Wrapper for FLTFillerEnum90 to allow for nullability.
@interface FLTFillerEnum90Box : NSObject
@property(nonatomic, assign) FLTFillerEnum90 value;
- (instancetype)initWithValue:(FLTFillerEnum90)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum91) {
  FLTFillerEnum91FillerMember91 = 0,
};

/// Wrapper for FLTFillerEnum91 to allow for nullability.
@interface FLTFillerEnum91Box : NSObject
@property(nonatomic, assign) FLTFillerEnum91 value;
- (instancetype)initWithValue:(FLTFillerEnum91)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum92) {
  FLTFillerEnum92FillerMember92 = 0,
};

/// Wrapper for FLTFillerEnum92 to allow for nullability.
@interface FLTFillerEnum92Box : NSObject
@property(nonatomic, assign) FLTFillerEnum92 value;
- (instancetype)initWithValue:(FLTFillerEnum92)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum93) {
  FLTFillerEnum93FillerMember93 = 0,
};

/// Wrapper for FLTFillerEnum93 to allow for nullability.
@interface FLTFillerEnum93Box : NSObject
@property(nonatomic, assign) FLTFillerEnum93 value;
- (instancetype)initWithValue:(FLTFillerEnum93)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum94) {
  FLTFillerEnum94FillerMember94 = 0,
};

/// Wrapper for FLTFillerEnum94 to allow for nullability.
@interface FLTFillerEnum94Box : NSObject
@property(nonatomic, assign) FLTFillerEnum94 value;
- (instancetype)initWithValue:(FLTFillerEnum94)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum95) {
  FLTFillerEnum95FillerMember95 = 0,
};

/// Wrapper for FLTFillerEnum95 to allow for nullability.
@interface FLTFillerEnum95Box : NSObject
@property(nonatomic, assign) FLTFillerEnum95 value;
- (instancetype)initWithValue:(FLTFillerEnum95)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum96) {
  FLTFillerEnum96FillerMember96 = 0,
};

/// Wrapper for FLTFillerEnum96 to allow for nullability.
@interface FLTFillerEnum96Box : NSObject
@property(nonatomic, assign) FLTFillerEnum96 value;
- (instancetype)initWithValue:(FLTFillerEnum96)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum97) {
  FLTFillerEnum97FillerMember97 = 0,
};

/// Wrapper for FLTFillerEnum97 to allow for nullability.
@interface FLTFillerEnum97Box : NSObject
@property(nonatomic, assign) FLTFillerEnum97 value;
- (instancetype)initWithValue:(FLTFillerEnum97)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum98) {
  FLTFillerEnum98FillerMember98 = 0,
};

/// Wrapper for FLTFillerEnum98 to allow for nullability.
@interface FLTFillerEnum98Box : NSObject
@property(nonatomic, assign) FLTFillerEnum98 value;
- (instancetype)initWithValue:(FLTFillerEnum98)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum99) {
  FLTFillerEnum99FillerMember99 = 0,
};

/// Wrapper for FLTFillerEnum99 to allow for nullability.
@interface FLTFillerEnum99Box : NSObject
@property(nonatomic, assign) FLTFillerEnum99 value;
- (instancetype)initWithValue:(FLTFillerEnum99)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum100) {
  FLTFillerEnum100FillerMember100 = 0,
};

/// Wrapper for FLTFillerEnum100 to allow for nullability.
@interface FLTFillerEnum100Box : NSObject
@property(nonatomic, assign) FLTFillerEnum100 value;
- (instancetype)initWithValue:(FLTFillerEnum100)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum101) {
  FLTFillerEnum101FillerMember101 = 0,
};

/// Wrapper for FLTFillerEnum101 to allow for nullability.
@interface FLTFillerEnum101Box : NSObject
@property(nonatomic, assign) FLTFillerEnum101 value;
- (instancetype)initWithValue:(FLTFillerEnum101)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum102) {
  FLTFillerEnum102FillerMember102 = 0,
};

/// Wrapper for FLTFillerEnum102 to allow for nullability.
@interface FLTFillerEnum102Box : NSObject
@property(nonatomic, assign) FLTFillerEnum102 value;
- (instancetype)initWithValue:(FLTFillerEnum102)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum103) {
  FLTFillerEnum103FillerMember103 = 0,
};

/// Wrapper for FLTFillerEnum103 to allow for nullability.
@interface FLTFillerEnum103Box : NSObject
@property(nonatomic, assign) FLTFillerEnum103 value;
- (instancetype)initWithValue:(FLTFillerEnum103)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum104) {
  FLTFillerEnum104FillerMember104 = 0,
};

/// Wrapper for FLTFillerEnum104 to allow for nullability.
@interface FLTFillerEnum104Box : NSObject
@property(nonatomic, assign) FLTFillerEnum104 value;
- (instancetype)initWithValue:(FLTFillerEnum104)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum105) {
  FLTFillerEnum105FillerMember105 = 0,
};

/// Wrapper for FLTFillerEnum105 to allow for nullability.
@interface FLTFillerEnum105Box : NSObject
@property(nonatomic, assign) FLTFillerEnum105 value;
- (instancetype)initWithValue:(FLTFillerEnum105)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum106) {
  FLTFillerEnum106FillerMember106 = 0,
};

/// Wrapper for FLTFillerEnum106 to allow for nullability.
@interface FLTFillerEnum106Box : NSObject
@property(nonatomic, assign) FLTFillerEnum106 value;
- (instancetype)initWithValue:(FLTFillerEnum106)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum107) {
  FLTFillerEnum107FillerMember107 = 0,
};

/// Wrapper for FLTFillerEnum107 to allow for nullability.
@interface FLTFillerEnum107Box : NSObject
@property(nonatomic, assign) FLTFillerEnum107 value;
- (instancetype)initWithValue:(FLTFillerEnum107)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum108) {
  FLTFillerEnum108FillerMember108 = 0,
};

/// Wrapper for FLTFillerEnum108 to allow for nullability.
@interface FLTFillerEnum108Box : NSObject
@property(nonatomic, assign) FLTFillerEnum108 value;
- (instancetype)initWithValue:(FLTFillerEnum108)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum109) {
  FLTFillerEnum109FillerMember109 = 0,
};

/// Wrapper for FLTFillerEnum109 to allow for nullability.
@interface FLTFillerEnum109Box : NSObject
@property(nonatomic, assign) FLTFillerEnum109 value;
- (instancetype)initWithValue:(FLTFillerEnum109)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum110) {
  FLTFillerEnum110FillerMember110 = 0,
};

/// Wrapper for FLTFillerEnum110 to allow for nullability.
@interface FLTFillerEnum110Box : NSObject
@property(nonatomic, assign) FLTFillerEnum110 value;
- (instancetype)initWithValue:(FLTFillerEnum110)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum111) {
  FLTFillerEnum111FillerMember111 = 0,
};

/// Wrapper for FLTFillerEnum111 to allow for nullability.
@interface FLTFillerEnum111Box : NSObject
@property(nonatomic, assign) FLTFillerEnum111 value;
- (instancetype)initWithValue:(FLTFillerEnum111)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum112) {
  FLTFillerEnum112FillerMember112 = 0,
};

/// Wrapper for FLTFillerEnum112 to allow for nullability.
@interface FLTFillerEnum112Box : NSObject
@property(nonatomic, assign) FLTFillerEnum112 value;
- (instancetype)initWithValue:(FLTFillerEnum112)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum113) {
  FLTFillerEnum113FillerMember113 = 0,
};

/// Wrapper for FLTFillerEnum113 to allow for nullability.
@interface FLTFillerEnum113Box : NSObject
@property(nonatomic, assign) FLTFillerEnum113 value;
- (instancetype)initWithValue:(FLTFillerEnum113)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum114) {
  FLTFillerEnum114FillerMember114 = 0,
};

/// Wrapper for FLTFillerEnum114 to allow for nullability.
@interface FLTFillerEnum114Box : NSObject
@property(nonatomic, assign) FLTFillerEnum114 value;
- (instancetype)initWithValue:(FLTFillerEnum114)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum115) {
  FLTFillerEnum115FillerMember115 = 0,
};

/// Wrapper for FLTFillerEnum115 to allow for nullability.
@interface FLTFillerEnum115Box : NSObject
@property(nonatomic, assign) FLTFillerEnum115 value;
- (instancetype)initWithValue:(FLTFillerEnum115)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum116) {
  FLTFillerEnum116FillerMember116 = 0,
};

/// Wrapper for FLTFillerEnum116 to allow for nullability.
@interface FLTFillerEnum116Box : NSObject
@property(nonatomic, assign) FLTFillerEnum116 value;
- (instancetype)initWithValue:(FLTFillerEnum116)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum117) {
  FLTFillerEnum117FillerMember117 = 0,
};

/// Wrapper for FLTFillerEnum117 to allow for nullability.
@interface FLTFillerEnum117Box : NSObject
@property(nonatomic, assign) FLTFillerEnum117 value;
- (instancetype)initWithValue:(FLTFillerEnum117)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum118) {
  FLTFillerEnum118FillerMember118 = 0,
};

/// Wrapper for FLTFillerEnum118 to allow for nullability.
@interface FLTFillerEnum118Box : NSObject
@property(nonatomic, assign) FLTFillerEnum118 value;
- (instancetype)initWithValue:(FLTFillerEnum118)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum119) {
  FLTFillerEnum119FillerMember119 = 0,
};

/// Wrapper for FLTFillerEnum119 to allow for nullability.
@interface FLTFillerEnum119Box : NSObject
@property(nonatomic, assign) FLTFillerEnum119 value;
- (instancetype)initWithValue:(FLTFillerEnum119)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum120) {
  FLTFillerEnum120FillerMember120 = 0,
};

/// Wrapper for FLTFillerEnum120 to allow for nullability.
@interface FLTFillerEnum120Box : NSObject
@property(nonatomic, assign) FLTFillerEnum120 value;
- (instancetype)initWithValue:(FLTFillerEnum120)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum121) {
  FLTFillerEnum121FillerMember121 = 0,
};

/// Wrapper for FLTFillerEnum121 to allow for nullability.
@interface FLTFillerEnum121Box : NSObject
@property(nonatomic, assign) FLTFillerEnum121 value;
- (instancetype)initWithValue:(FLTFillerEnum121)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum122) {
  FLTFillerEnum122FillerMember122 = 0,
};

/// Wrapper for FLTFillerEnum122 to allow for nullability.
@interface FLTFillerEnum122Box : NSObject
@property(nonatomic, assign) FLTFillerEnum122 value;
- (instancetype)initWithValue:(FLTFillerEnum122)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum123) {
  FLTFillerEnum123FillerMember123 = 0,
};

/// Wrapper for FLTFillerEnum123 to allow for nullability.
@interface FLTFillerEnum123Box : NSObject
@property(nonatomic, assign) FLTFillerEnum123 value;
- (instancetype)initWithValue:(FLTFillerEnum123)value;
@end

typedef NS_ENUM(NSUInteger, FLTFillerEnum124) {
  FLTFillerEnum124FillerMember124 = 0,
};

/// Wrapper for FLTFillerEnum124 to allow for nullability.
@interface FLTFillerEnum124Box : NSObject
@property(nonatomic, assign) FLTFillerEnum124 value;
- (instancetype)initWithValue:(FLTFillerEnum124)value;
@end

typedef NS_ENUM(NSUInteger, FLTAnEnum) {
  FLTAnEnumOne = 0,
  FLTAnEnumTwo = 1,
  FLTAnEnumThree = 2,
  FLTAnEnumFortyTwo = 3,
  FLTAnEnumFourHundredTwentyTwo = 4,
};

/// Wrapper for FLTAnEnum to allow for nullability.
@interface FLTAnEnumBox : NSObject
@property(nonatomic, assign) FLTAnEnum value;
- (instancetype)initWithValue:(FLTAnEnum)value;
@end

typedef NS_ENUM(NSUInteger, FLTAnotherEnum) {
  FLTAnotherEnumJustInCase = 0,
};

/// Wrapper for FLTAnotherEnum to allow for nullability.
@interface FLTAnotherEnumBox : NSObject
@property(nonatomic, assign) FLTAnotherEnum value;
- (instancetype)initWithValue:(FLTAnotherEnum)value;
@end

@class FLTAllTypes;
@class FLTAllNullableTypes;
@class FLTAllNullableTypesWithoutRecursion;
@class FLTAllClassesWrapper;
@class FLTTestMessage;

/// A class containing all supported types.
@interface FLTAllTypes : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithABool:(BOOL)aBool
                        anInt:(NSInteger)anInt
                      anInt64:(NSInteger)anInt64
                      aDouble:(double)aDouble
                   aByteArray:(FlutterStandardTypedData *)aByteArray
                  a4ByteArray:(FlutterStandardTypedData *)a4ByteArray
                  a8ByteArray:(FlutterStandardTypedData *)a8ByteArray
                  aFloatArray:(FlutterStandardTypedData *)aFloatArray
                       anEnum:(FLTAnEnum)anEnum
                  anotherEnum:(FLTAnotherEnum)anotherEnum
                      aString:(NSString *)aString
                     anObject:(id)anObject
                         list:(NSArray<id> *)list
                   stringList:(NSArray<NSString *> *)stringList
                      intList:(NSArray<NSNumber *> *)intList
                   doubleList:(NSArray<NSNumber *> *)doubleList
                     boolList:(NSArray<NSNumber *> *)boolList
                          map:(NSDictionary *)map;
@property(nonatomic, assign) BOOL aBool;
@property(nonatomic, assign) NSInteger anInt;
@property(nonatomic, assign) NSInteger anInt64;
@property(nonatomic, assign) double aDouble;
@property(nonatomic, strong) FlutterStandardTypedData *aByteArray;
@property(nonatomic, strong) FlutterStandardTypedData *a4ByteArray;
@property(nonatomic, strong) FlutterStandardTypedData *a8ByteArray;
@property(nonatomic, strong) FlutterStandardTypedData *aFloatArray;
@property(nonatomic, assign) FLTAnEnum anEnum;
@property(nonatomic, assign) FLTAnotherEnum anotherEnum;
@property(nonatomic, copy) NSString *aString;
@property(nonatomic, strong) id anObject;
@property(nonatomic, copy) NSArray<id> *list;
@property(nonatomic, copy) NSArray<NSString *> *stringList;
@property(nonatomic, copy) NSArray<NSNumber *> *intList;
@property(nonatomic, copy) NSArray<NSNumber *> *doubleList;
@property(nonatomic, copy) NSArray<NSNumber *> *boolList;
@property(nonatomic, copy) NSDictionary *map;
@end

/// A class containing all supported nullable types.
@interface FLTAllNullableTypes : NSObject
+ (instancetype)makeWithANullableBool:(nullable NSNumber *)aNullableBool
                         aNullableInt:(nullable NSNumber *)aNullableInt
                       aNullableInt64:(nullable NSNumber *)aNullableInt64
                      aNullableDouble:(nullable NSNumber *)aNullableDouble
                   aNullableByteArray:(nullable FlutterStandardTypedData *)aNullableByteArray
                  aNullable4ByteArray:(nullable FlutterStandardTypedData *)aNullable4ByteArray
                  aNullable8ByteArray:(nullable FlutterStandardTypedData *)aNullable8ByteArray
                  aNullableFloatArray:(nullable FlutterStandardTypedData *)aNullableFloatArray
                   nullableNestedList:(nullable NSArray<NSArray<NSNumber *> *> *)nullableNestedList
           nullableMapWithAnnotations:
               (nullable NSDictionary<NSString *, NSString *> *)nullableMapWithAnnotations
                nullableMapWithObject:(nullable NSDictionary<NSString *, id> *)nullableMapWithObject
                        aNullableEnum:(nullable FLTAnEnumBox *)aNullableEnum
                  anotherNullableEnum:(nullable FLTAnotherEnumBox *)anotherNullableEnum
                      aNullableString:(nullable NSString *)aNullableString
                      aNullableObject:(nullable id)aNullableObject
                     allNullableTypes:(nullable FLTAllNullableTypes *)allNullableTypes
                                 list:(nullable NSArray<id> *)list
                           stringList:(nullable NSArray<NSString *> *)stringList
                              intList:(nullable NSArray<NSNumber *> *)intList
                           doubleList:(nullable NSArray<NSNumber *> *)doubleList
                             boolList:(nullable NSArray<NSNumber *> *)boolList
                      nestedClassList:(nullable NSArray<FLTAllNullableTypes *> *)nestedClassList
                                  map:(nullable NSDictionary *)map;
@property(nonatomic, strong, nullable) NSNumber *aNullableBool;
@property(nonatomic, strong, nullable) NSNumber *aNullableInt;
@property(nonatomic, strong, nullable) NSNumber *aNullableInt64;
@property(nonatomic, strong, nullable) NSNumber *aNullableDouble;
@property(nonatomic, strong, nullable) FlutterStandardTypedData *aNullableByteArray;
@property(nonatomic, strong, nullable) FlutterStandardTypedData *aNullable4ByteArray;
@property(nonatomic, strong, nullable) FlutterStandardTypedData *aNullable8ByteArray;
@property(nonatomic, strong, nullable) FlutterStandardTypedData *aNullableFloatArray;
@property(nonatomic, copy, nullable) NSArray<NSArray<NSNumber *> *> *nullableNestedList;
@property(nonatomic, copy, nullable)
    NSDictionary<NSString *, NSString *> *nullableMapWithAnnotations;
@property(nonatomic, copy, nullable) NSDictionary<NSString *, id> *nullableMapWithObject;
@property(nonatomic, strong, nullable) FLTAnEnumBox *aNullableEnum;
@property(nonatomic, strong, nullable) FLTAnotherEnumBox *anotherNullableEnum;
@property(nonatomic, copy, nullable) NSString *aNullableString;
@property(nonatomic, strong, nullable) id aNullableObject;
@property(nonatomic, strong, nullable) FLTAllNullableTypes *allNullableTypes;
@property(nonatomic, copy, nullable) NSArray<id> *list;
@property(nonatomic, copy, nullable) NSArray<NSString *> *stringList;
@property(nonatomic, copy, nullable) NSArray<NSNumber *> *intList;
@property(nonatomic, copy, nullable) NSArray<NSNumber *> *doubleList;
@property(nonatomic, copy, nullable) NSArray<NSNumber *> *boolList;
@property(nonatomic, copy, nullable) NSArray<FLTAllNullableTypes *> *nestedClassList;
@property(nonatomic, copy, nullable) NSDictionary *map;
@end

/// The primary purpose for this class is to ensure coverage of Swift structs
/// with nullable items, as the primary [AllNullableTypes] class is being used to
/// test Swift classes.
@interface FLTAllNullableTypesWithoutRecursion : NSObject
+ (instancetype)makeWithANullableBool:(nullable NSNumber *)aNullableBool
                         aNullableInt:(nullable NSNumber *)aNullableInt
                       aNullableInt64:(nullable NSNumber *)aNullableInt64
                      aNullableDouble:(nullable NSNumber *)aNullableDouble
                   aNullableByteArray:(nullable FlutterStandardTypedData *)aNullableByteArray
                  aNullable4ByteArray:(nullable FlutterStandardTypedData *)aNullable4ByteArray
                  aNullable8ByteArray:(nullable FlutterStandardTypedData *)aNullable8ByteArray
                  aNullableFloatArray:(nullable FlutterStandardTypedData *)aNullableFloatArray
                   nullableNestedList:(nullable NSArray<NSArray<NSNumber *> *> *)nullableNestedList
           nullableMapWithAnnotations:
               (nullable NSDictionary<NSString *, NSString *> *)nullableMapWithAnnotations
                nullableMapWithObject:(nullable NSDictionary<NSString *, id> *)nullableMapWithObject
                        aNullableEnum:(nullable FLTAnEnumBox *)aNullableEnum
                  anotherNullableEnum:(nullable FLTAnotherEnumBox *)anotherNullableEnum
                      aNullableString:(nullable NSString *)aNullableString
                      aNullableObject:(nullable id)aNullableObject
                                 list:(nullable NSArray<id> *)list
                           stringList:(nullable NSArray<NSString *> *)stringList
                              intList:(nullable NSArray<NSNumber *> *)intList
                           doubleList:(nullable NSArray<NSNumber *> *)doubleList
                             boolList:(nullable NSArray<NSNumber *> *)boolList
                                  map:(nullable NSDictionary *)map;
@property(nonatomic, strong, nullable) NSNumber *aNullableBool;
@property(nonatomic, strong, nullable) NSNumber *aNullableInt;
@property(nonatomic, strong, nullable) NSNumber *aNullableInt64;
@property(nonatomic, strong, nullable) NSNumber *aNullableDouble;
@property(nonatomic, strong, nullable) FlutterStandardTypedData *aNullableByteArray;
@property(nonatomic, strong, nullable) FlutterStandardTypedData *aNullable4ByteArray;
@property(nonatomic, strong, nullable) FlutterStandardTypedData *aNullable8ByteArray;
@property(nonatomic, strong, nullable) FlutterStandardTypedData *aNullableFloatArray;
@property(nonatomic, copy, nullable) NSArray<NSArray<NSNumber *> *> *nullableNestedList;
@property(nonatomic, copy, nullable)
    NSDictionary<NSString *, NSString *> *nullableMapWithAnnotations;
@property(nonatomic, copy, nullable) NSDictionary<NSString *, id> *nullableMapWithObject;
@property(nonatomic, strong, nullable) FLTAnEnumBox *aNullableEnum;
@property(nonatomic, strong, nullable) FLTAnotherEnumBox *anotherNullableEnum;
@property(nonatomic, copy, nullable) NSString *aNullableString;
@property(nonatomic, strong, nullable) id aNullableObject;
@property(nonatomic, copy, nullable) NSArray<id> *list;
@property(nonatomic, copy, nullable) NSArray<NSString *> *stringList;
@property(nonatomic, copy, nullable) NSArray<NSNumber *> *intList;
@property(nonatomic, copy, nullable) NSArray<NSNumber *> *doubleList;
@property(nonatomic, copy, nullable) NSArray<NSNumber *> *boolList;
@property(nonatomic, copy, nullable) NSDictionary *map;
@end

/// A class for testing nested class handling.
///
/// This is needed to test nested nullable and non-nullable classes,
/// `AllNullableTypes` is non-nullable here as it is easier to instantiate
/// than `AllTypes` when testing doesn't require both (ie. testing null classes).
@interface FLTAllClassesWrapper : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithAllNullableTypes:(FLTAllNullableTypes *)allNullableTypes
        allNullableTypesWithoutRecursion:
            (nullable FLTAllNullableTypesWithoutRecursion *)allNullableTypesWithoutRecursion
                                allTypes:(nullable FLTAllTypes *)allTypes;
@property(nonatomic, strong) FLTAllNullableTypes *allNullableTypes;
@property(nonatomic, strong, nullable)
    FLTAllNullableTypesWithoutRecursion *allNullableTypesWithoutRecursion;
@property(nonatomic, strong, nullable) FLTAllTypes *allTypes;
@end

/// A data class containing a List, used in unit tests.
@interface FLTTestMessage : NSObject
+ (instancetype)makeWithTestList:(nullable NSArray<id> *)testList;
@property(nonatomic, copy, nullable) NSArray<id> *testList;
@end

@interface FLT__pigeon_CodecOverflow : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithType:(NSInteger)type wrapped:(nullable id)wrapped;
@property(nonatomic, assign) NSInteger type;
@property(nonatomic, strong, nullable) id wrapped;
@end

/// The codec used by all APIs.
NSObject<FlutterMessageCodec> *FLTGetCoreTestsCodec(void);

/// The core interface that each host language plugin must implement in
/// platform_test integration tests.
@protocol FLTHostIntegrationCoreApi
/// A no-op function taking no arguments and returning no value, to sanity
/// test basic calling.
- (void)noopWithError:(FlutterError *_Nullable *_Nonnull)error;
/// Returns the passed object, to test serialization and deserialization.
///
/// @return `nil` only when `error != nil`.
- (nullable FLTAllTypes *)echoAllTypes:(FLTAllTypes *)everything
                                 error:(FlutterError *_Nullable *_Nonnull)error;
/// Returns an error, to test error handling.
- (nullable id)throwErrorWithError:(FlutterError *_Nullable *_Nonnull)error;
/// Returns an error from a void function, to test error handling.
- (void)throwErrorFromVoidWithError:(FlutterError *_Nullable *_Nonnull)error;
/// Returns a Flutter error, to test error handling.
- (nullable id)throwFlutterErrorWithError:(FlutterError *_Nullable *_Nonnull)error;
/// Returns passed in int.
///
/// @return `nil` only when `error != nil`.
- (nullable NSNumber *)echoInt:(NSInteger)anInt error:(FlutterError *_Nullable *_Nonnull)error;
/// Returns passed in double.
///
/// @return `nil` only when `error != nil`.
- (nullable NSNumber *)echoDouble:(double)aDouble error:(FlutterError *_Nullable *_Nonnull)error;
/// Returns the passed in boolean.
///
/// @return `nil` only when `error != nil`.
- (nullable NSNumber *)echoBool:(BOOL)aBool error:(FlutterError *_Nullable *_Nonnull)error;
/// Returns the passed in string.
///
/// @return `nil` only when `error != nil`.
- (nullable NSString *)echoString:(NSString *)aString
                            error:(FlutterError *_Nullable *_Nonnull)error;
/// Returns the passed in Uint8List.
///
/// @return `nil` only when `error != nil`.
- (nullable FlutterStandardTypedData *)echoUint8List:(FlutterStandardTypedData *)aUint8List
                                               error:(FlutterError *_Nullable *_Nonnull)error;
/// Returns the passed in generic Object.
///
/// @return `nil` only when `error != nil`.
- (nullable id)echoObject:(id)anObject error:(FlutterError *_Nullable *_Nonnull)error;
/// Returns the passed list, to test serialization and deserialization.
///
/// @return `nil` only when `error != nil`.
- (nullable NSArray<id> *)echoList:(NSArray<id> *)list
                             error:(FlutterError *_Nullable *_Nonnull)error;
/// Returns the passed map, to test serialization and deserialization.
///
/// @return `nil` only when `error != nil`.
- (nullable NSDictionary<NSString *, id> *)echoMap:(NSDictionary<NSString *, id> *)aMap
                                             error:(FlutterError *_Nullable *_Nonnull)error;
/// Returns the passed map to test nested class serialization and deserialization.
///
/// @return `nil` only when `error != nil`.
- (nullable FLTAllClassesWrapper *)echoClassWrapper:(FLTAllClassesWrapper *)wrapper
                                              error:(FlutterError *_Nullable *_Nonnull)error;
/// Returns the passed enum to test serialization and deserialization.
///
/// @return `nil` only when `error != nil`.
- (FLTAnEnumBox *_Nullable)echoEnum:(FLTAnEnum)anEnum
                              error:(FlutterError *_Nullable *_Nonnull)error;
/// Returns the passed enum to test serialization and deserialization.
///
/// @return `nil` only when `error != nil`.
- (FLTAnotherEnumBox *_Nullable)echoAnotherEnum:(FLTAnotherEnum)anotherEnum
                                          error:(FlutterError *_Nullable *_Nonnull)error;
/// Returns the default string.
///
/// @return `nil` only when `error != nil`.
- (nullable NSString *)echoNamedDefaultString:(NSString *)aString
                                        error:(FlutterError *_Nullable *_Nonnull)error;
/// Returns passed in double.
///
/// @return `nil` only when `error != nil`.
- (nullable NSNumber *)echoOptionalDefaultDouble:(double)aDouble
                                           error:(FlutterError *_Nullable *_Nonnull)error;
/// Returns passed in int.
///
/// @return `nil` only when `error != nil`.
- (nullable NSNumber *)echoRequiredInt:(NSInteger)anInt
                                 error:(FlutterError *_Nullable *_Nonnull)error;
/// Returns the passed object, to test serialization and deserialization.
- (nullable FLTAllNullableTypes *)echoAllNullableTypes:(nullable FLTAllNullableTypes *)everything
                                                 error:(FlutterError *_Nullable *_Nonnull)error;
/// Returns the passed object, to test serialization and deserialization.
- (nullable FLTAllNullableTypesWithoutRecursion *)
    echoAllNullableTypesWithoutRecursion:(nullable FLTAllNullableTypesWithoutRecursion *)everything
                                   error:(FlutterError *_Nullable *_Nonnull)error;
/// Returns the inner `aString` value from the wrapped object, to test
/// sending of nested objects.
- (nullable NSString *)extractNestedNullableStringFrom:(FLTAllClassesWrapper *)wrapper
                                                 error:(FlutterError *_Nullable *_Nonnull)error;
/// Returns the inner `aString` value from the wrapped object, to test
/// sending of nested objects.
///
/// @return `nil` only when `error != nil`.
- (nullable FLTAllClassesWrapper *)
    createNestedObjectWithNullableString:(nullable NSString *)nullableString
                                   error:(FlutterError *_Nullable *_Nonnull)error;
/// Returns passed in arguments of multiple types.
///
/// @return `nil` only when `error != nil`.
- (nullable FLTAllNullableTypes *)
    sendMultipleNullableTypesABool:(nullable NSNumber *)aNullableBool
                             anInt:(nullable NSNumber *)aNullableInt
                           aString:(nullable NSString *)aNullableString
                             error:(FlutterError *_Nullable *_Nonnull)error;
/// Returns passed in arguments of multiple types.
///
/// @return `nil` only when `error != nil`.
- (nullable FLTAllNullableTypesWithoutRecursion *)
    sendMultipleNullableTypesWithoutRecursionABool:(nullable NSNumber *)aNullableBool
                                             anInt:(nullable NSNumber *)aNullableInt
                                           aString:(nullable NSString *)aNullableString
                                             error:(FlutterError *_Nullable *_Nonnull)error;
/// Returns passed in int.
- (nullable NSNumber *)echoNullableInt:(nullable NSNumber *)aNullableInt
                                 error:(FlutterError *_Nullable *_Nonnull)error;
/// Returns passed in double.
- (nullable NSNumber *)echoNullableDouble:(nullable NSNumber *)aNullableDouble
                                    error:(FlutterError *_Nullable *_Nonnull)error;
/// Returns the passed in boolean.
- (nullable NSNumber *)echoNullableBool:(nullable NSNumber *)aNullableBool
                                  error:(FlutterError *_Nullable *_Nonnull)error;
/// Returns the passed in string.
- (nullable NSString *)echoNullableString:(nullable NSString *)aNullableString
                                    error:(FlutterError *_Nullable *_Nonnull)error;
/// Returns the passed in Uint8List.
- (nullable FlutterStandardTypedData *)
    echoNullableUint8List:(nullable FlutterStandardTypedData *)aNullableUint8List
                    error:(FlutterError *_Nullable *_Nonnull)error;
/// Returns the passed in generic Object.
- (nullable id)echoNullableObject:(nullable id)aNullableObject
                            error:(FlutterError *_Nullable *_Nonnull)error;
/// Returns the passed list, to test serialization and deserialization.
- (nullable NSArray<id> *)echoNullableList:(nullable NSArray<id> *)aNullableList
                                     error:(FlutterError *_Nullable *_Nonnull)error;
/// Returns the passed map, to test serialization and deserialization.
- (nullable NSDictionary<NSString *, id> *)echoNullableMap:
                                               (nullable NSDictionary<NSString *, id> *)aNullableMap
                                                     error:(FlutterError *_Nullable *_Nonnull)error;
- (FLTAnEnumBox *_Nullable)echoNullableEnum:(nullable FLTAnEnumBox *)anEnumBoxed
                                      error:(FlutterError *_Nullable *_Nonnull)error;
- (FLTAnotherEnumBox *_Nullable)echoAnotherNullableEnum:
                                    (nullable FLTAnotherEnumBox *)anotherEnumBoxed
                                                  error:(FlutterError *_Nullable *_Nonnull)error;
/// Returns passed in int.
- (nullable NSNumber *)echoOptionalNullableInt:(nullable NSNumber *)aNullableInt
                                         error:(FlutterError *_Nullable *_Nonnull)error;
/// Returns the passed in string.
- (nullable NSString *)echoNamedNullableString:(nullable NSString *)aNullableString
                                         error:(FlutterError *_Nullable *_Nonnull)error;
/// A no-op function taking no arguments and returning no value, to sanity
/// test basic asynchronous calling.
- (void)noopAsyncWithCompletion:(void (^)(FlutterError *_Nullable))completion;
/// Returns passed in int asynchronously.
- (void)echoAsyncInt:(NSInteger)anInt
          completion:(void (^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
/// Returns passed in double asynchronously.
- (void)echoAsyncDouble:(double)aDouble
             completion:(void (^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
/// Returns the passed in boolean asynchronously.
- (void)echoAsyncBool:(BOOL)aBool
           completion:(void (^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
/// Returns the passed string asynchronously.
- (void)echoAsyncString:(NSString *)aString
             completion:(void (^)(NSString *_Nullable, FlutterError *_Nullable))completion;
/// Returns the passed in Uint8List asynchronously.
- (void)echoAsyncUint8List:(FlutterStandardTypedData *)aUint8List
                completion:(void (^)(FlutterStandardTypedData *_Nullable,
                                     FlutterError *_Nullable))completion;
/// Returns the passed in generic Object asynchronously.
- (void)echoAsyncObject:(id)anObject
             completion:(void (^)(id _Nullable, FlutterError *_Nullable))completion;
/// Returns the passed list, to test asynchronous serialization and deserialization.
- (void)echoAsyncList:(NSArray<id> *)list
           completion:(void (^)(NSArray<id> *_Nullable, FlutterError *_Nullable))completion;
/// Returns the passed map, to test asynchronous serialization and deserialization.
- (void)echoAsyncMap:(NSDictionary<NSString *, id> *)aMap
          completion:(void (^)(NSDictionary<NSString *, id> *_Nullable,
                               FlutterError *_Nullable))completion;
/// Returns the passed enum, to test asynchronous serialization and deserialization.
- (void)echoAsyncEnum:(FLTAnEnum)anEnum
           completion:(void (^)(FLTAnEnumBox *_Nullable, FlutterError *_Nullable))completion;
/// Returns the passed enum, to test asynchronous serialization and deserialization.
- (void)echoAnotherAsyncEnum:(FLTAnotherEnum)anotherEnum
                  completion:
                      (void (^)(FLTAnotherEnumBox *_Nullable, FlutterError *_Nullable))completion;
/// Responds with an error from an async function returning a value.
- (void)throwAsyncErrorWithCompletion:(void (^)(id _Nullable, FlutterError *_Nullable))completion;
/// Responds with an error from an async void function.
- (void)throwAsyncErrorFromVoidWithCompletion:(void (^)(FlutterError *_Nullable))completion;
/// Responds with a Flutter error from an async function returning a value.
- (void)throwAsyncFlutterErrorWithCompletion:(void (^)(id _Nullable,
                                                       FlutterError *_Nullable))completion;
/// Returns the passed object, to test async serialization and deserialization.
- (void)echoAsyncAllTypes:(FLTAllTypes *)everything
               completion:(void (^)(FLTAllTypes *_Nullable, FlutterError *_Nullable))completion;
/// Returns the passed object, to test serialization and deserialization.
- (void)echoAsyncNullableAllNullableTypes:(nullable FLTAllNullableTypes *)everything
                               completion:(void (^)(FLTAllNullableTypes *_Nullable,
                                                    FlutterError *_Nullable))completion;
/// Returns the passed object, to test serialization and deserialization.
- (void)echoAsyncNullableAllNullableTypesWithoutRecursion:
            (nullable FLTAllNullableTypesWithoutRecursion *)everything
                                               completion:
                                                   (void (^)(FLTAllNullableTypesWithoutRecursion
                                                                 *_Nullable,
                                                             FlutterError *_Nullable))completion;
/// Returns passed in int asynchronously.
- (void)echoAsyncNullableInt:(nullable NSNumber *)anInt
                  completion:(void (^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
/// Returns passed in double asynchronously.
- (void)echoAsyncNullableDouble:(nullable NSNumber *)aDouble
                     completion:(void (^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
/// Returns the passed in boolean asynchronously.
- (void)echoAsyncNullableBool:(nullable NSNumber *)aBool
                   completion:(void (^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
/// Returns the passed string asynchronously.
- (void)echoAsyncNullableString:(nullable NSString *)aString
                     completion:(void (^)(NSString *_Nullable, FlutterError *_Nullable))completion;
/// Returns the passed in Uint8List asynchronously.
- (void)echoAsyncNullableUint8List:(nullable FlutterStandardTypedData *)aUint8List
                        completion:(void (^)(FlutterStandardTypedData *_Nullable,
                                             FlutterError *_Nullable))completion;
/// Returns the passed in generic Object asynchronously.
- (void)echoAsyncNullableObject:(nullable id)anObject
                     completion:(void (^)(id _Nullable, FlutterError *_Nullable))completion;
/// Returns the passed list, to test asynchronous serialization and deserialization.
- (void)echoAsyncNullableList:(nullable NSArray<id> *)list
                   completion:(void (^)(NSArray<id> *_Nullable, FlutterError *_Nullable))completion;
/// Returns the passed map, to test asynchronous serialization and deserialization.
- (void)echoAsyncNullableMap:(nullable NSDictionary<NSString *, id> *)aMap
                  completion:(void (^)(NSDictionary<NSString *, id> *_Nullable,
                                       FlutterError *_Nullable))completion;
/// Returns the passed enum, to test asynchronous serialization and deserialization.
- (void)echoAsyncNullableEnum:(nullable FLTAnEnumBox *)anEnumBoxed
                   completion:
                       (void (^)(FLTAnEnumBox *_Nullable, FlutterError *_Nullable))completion;
/// Returns the passed enum, to test asynchronous serialization and deserialization.
- (void)echoAnotherAsyncNullableEnum:(nullable FLTAnotherEnumBox *)anotherEnumBoxed
                          completion:(void (^)(FLTAnotherEnumBox *_Nullable,
                                               FlutterError *_Nullable))completion;
- (void)callFlutterNoopWithCompletion:(void (^)(FlutterError *_Nullable))completion;
- (void)callFlutterThrowErrorWithCompletion:(void (^)(id _Nullable,
                                                      FlutterError *_Nullable))completion;
- (void)callFlutterThrowErrorFromVoidWithCompletion:(void (^)(FlutterError *_Nullable))completion;
- (void)callFlutterEchoAllTypes:(FLTAllTypes *)everything
                     completion:
                         (void (^)(FLTAllTypes *_Nullable, FlutterError *_Nullable))completion;
- (void)callFlutterEchoAllNullableTypes:(nullable FLTAllNullableTypes *)everything
                             completion:(void (^)(FLTAllNullableTypes *_Nullable,
                                                  FlutterError *_Nullable))completion;
- (void)callFlutterSendMultipleNullableTypesABool:(nullable NSNumber *)aNullableBool
                                            anInt:(nullable NSNumber *)aNullableInt
                                          aString:(nullable NSString *)aNullableString
                                       completion:(void (^)(FLTAllNullableTypes *_Nullable,
                                                            FlutterError *_Nullable))completion;
- (void)callFlutterEchoAllNullableTypesWithoutRecursion:
            (nullable FLTAllNullableTypesWithoutRecursion *)everything
                                             completion:
                                                 (void (^)(
                                                     FLTAllNullableTypesWithoutRecursion *_Nullable,
                                                     FlutterError *_Nullable))completion;
- (void)
    callFlutterSendMultipleNullableTypesWithoutRecursionABool:(nullable NSNumber *)aNullableBool
                                                        anInt:(nullable NSNumber *)aNullableInt
                                                      aString:(nullable NSString *)aNullableString
                                                   completion:
                                                       (void (^)(FLTAllNullableTypesWithoutRecursion
                                                                     *_Nullable,
                                                                 FlutterError *_Nullable))
                                                           completion;
- (void)callFlutterEchoBool:(BOOL)aBool
                 completion:(void (^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
- (void)callFlutterEchoInt:(NSInteger)anInt
                completion:(void (^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
- (void)callFlutterEchoDouble:(double)aDouble
                   completion:(void (^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
- (void)callFlutterEchoString:(NSString *)aString
                   completion:(void (^)(NSString *_Nullable, FlutterError *_Nullable))completion;
- (void)callFlutterEchoUint8List:(FlutterStandardTypedData *)list
                      completion:(void (^)(FlutterStandardTypedData *_Nullable,
                                           FlutterError *_Nullable))completion;
- (void)callFlutterEchoList:(NSArray<id> *)list
                 completion:(void (^)(NSArray<id> *_Nullable, FlutterError *_Nullable))completion;
- (void)callFlutterEchoMap:(NSDictionary<NSString *, id> *)aMap
                completion:(void (^)(NSDictionary<NSString *, id> *_Nullable,
                                     FlutterError *_Nullable))completion;
- (void)callFlutterEchoEnum:(FLTAnEnum)anEnum
                 completion:(void (^)(FLTAnEnumBox *_Nullable, FlutterError *_Nullable))completion;
- (void)callFlutterEchoAnotherEnum:(FLTAnotherEnum)anotherEnum
                        completion:(void (^)(FLTAnotherEnumBox *_Nullable,
                                             FlutterError *_Nullable))completion;
- (void)callFlutterEchoNullableBool:(nullable NSNumber *)aBool
                         completion:
                             (void (^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
- (void)callFlutterEchoNullableInt:(nullable NSNumber *)anInt
                        completion:
                            (void (^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
- (void)callFlutterEchoNullableDouble:(nullable NSNumber *)aDouble
                           completion:
                               (void (^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
- (void)callFlutterEchoNullableString:(nullable NSString *)aString
                           completion:
                               (void (^)(NSString *_Nullable, FlutterError *_Nullable))completion;
- (void)callFlutterEchoNullableUint8List:(nullable FlutterStandardTypedData *)list
                              completion:(void (^)(FlutterStandardTypedData *_Nullable,
                                                   FlutterError *_Nullable))completion;
- (void)callFlutterEchoNullableList:(nullable NSArray<id> *)list
                         completion:
                             (void (^)(NSArray<id> *_Nullable, FlutterError *_Nullable))completion;
- (void)callFlutterEchoNullableMap:(nullable NSDictionary<NSString *, id> *)aMap
                        completion:(void (^)(NSDictionary<NSString *, id> *_Nullable,
                                             FlutterError *_Nullable))completion;
- (void)callFlutterEchoNullableEnum:(nullable FLTAnEnumBox *)anEnumBoxed
                         completion:
                             (void (^)(FLTAnEnumBox *_Nullable, FlutterError *_Nullable))completion;
- (void)callFlutterEchoAnotherNullableEnum:(nullable FLTAnotherEnumBox *)anotherEnumBoxed
                                completion:(void (^)(FLTAnotherEnumBox *_Nullable,
                                                     FlutterError *_Nullable))completion;
- (void)callFlutterSmallApiEchoString:(NSString *)aString
                           completion:
                               (void (^)(NSString *_Nullable, FlutterError *_Nullable))completion;
@end

extern void SetUpFLTHostIntegrationCoreApi(id<FlutterBinaryMessenger> binaryMessenger,
                                           NSObject<FLTHostIntegrationCoreApi> *_Nullable api);

extern void SetUpFLTHostIntegrationCoreApiWithSuffix(
    id<FlutterBinaryMessenger> binaryMessenger, NSObject<FLTHostIntegrationCoreApi> *_Nullable api,
    NSString *messageChannelSuffix);

/// The core interface that the Dart platform_test code implements for host
/// integration tests to call into.
@interface FLTFlutterIntegrationCoreApi : NSObject
- (instancetype)initWithBinaryMessenger:(id<FlutterBinaryMessenger>)binaryMessenger;
- (instancetype)initWithBinaryMessenger:(id<FlutterBinaryMessenger>)binaryMessenger
                   messageChannelSuffix:(nullable NSString *)messageChannelSuffix;
/// A no-op function taking no arguments and returning no value, to sanity
/// test basic calling.
- (void)noopWithCompletion:(void (^)(FlutterError *_Nullable))completion;
/// Responds with an error from an async function returning a value.
- (void)throwErrorWithCompletion:(void (^)(id _Nullable, FlutterError *_Nullable))completion;
/// Responds with an error from an async void function.
- (void)throwErrorFromVoidWithCompletion:(void (^)(FlutterError *_Nullable))completion;
/// Returns the passed object, to test serialization and deserialization.
- (void)echoAllTypes:(FLTAllTypes *)everything
          completion:(void (^)(FLTAllTypes *_Nullable, FlutterError *_Nullable))completion;
/// Returns the passed object, to test serialization and deserialization.
- (void)echoAllNullableTypes:(nullable FLTAllNullableTypes *)everything
                  completion:
                      (void (^)(FLTAllNullableTypes *_Nullable, FlutterError *_Nullable))completion;
/// Returns passed in arguments of multiple types.
///
/// Tests multiple-arity FlutterApi handling.
- (void)sendMultipleNullableTypesABool:(nullable NSNumber *)aNullableBool
                                 anInt:(nullable NSNumber *)aNullableInt
                               aString:(nullable NSString *)aNullableString
                            completion:(void (^)(FLTAllNullableTypes *_Nullable,
                                                 FlutterError *_Nullable))completion;
/// Returns the passed object, to test serialization and deserialization.
- (void)
    echoAllNullableTypesWithoutRecursion:(nullable FLTAllNullableTypesWithoutRecursion *)everything
                              completion:(void (^)(FLTAllNullableTypesWithoutRecursion *_Nullable,
                                                   FlutterError *_Nullable))completion;
/// Returns passed in arguments of multiple types.
///
/// Tests multiple-arity FlutterApi handling.
- (void)sendMultipleNullableTypesWithoutRecursionABool:(nullable NSNumber *)aNullableBool
                                                 anInt:(nullable NSNumber *)aNullableInt
                                               aString:(nullable NSString *)aNullableString
                                            completion:
                                                (void (^)(
                                                    FLTAllNullableTypesWithoutRecursion *_Nullable,
                                                    FlutterError *_Nullable))completion;
/// Returns the passed boolean, to test serialization and deserialization.
- (void)echoBool:(BOOL)aBool
      completion:(void (^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
/// Returns the passed int, to test serialization and deserialization.
- (void)echoInt:(NSInteger)anInt
     completion:(void (^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
/// Returns the passed double, to test serialization and deserialization.
- (void)echoDouble:(double)aDouble
        completion:(void (^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
/// Returns the passed string, to test serialization and deserialization.
- (void)echoString:(NSString *)aString
        completion:(void (^)(NSString *_Nullable, FlutterError *_Nullable))completion;
/// Returns the passed byte list, to test serialization and deserialization.
- (void)echoUint8List:(FlutterStandardTypedData *)list
           completion:
               (void (^)(FlutterStandardTypedData *_Nullable, FlutterError *_Nullable))completion;
/// Returns the passed list, to test serialization and deserialization.
- (void)echoList:(NSArray<id> *)list
      completion:(void (^)(NSArray<id> *_Nullable, FlutterError *_Nullable))completion;
/// Returns the passed map, to test serialization and deserialization.
- (void)echoMap:(NSDictionary<NSString *, id> *)aMap
     completion:
         (void (^)(NSDictionary<NSString *, id> *_Nullable, FlutterError *_Nullable))completion;
/// Returns the passed enum to test serialization and deserialization.
- (void)echoEnum:(FLTAnEnum)anEnum
      completion:(void (^)(FLTAnEnumBox *_Nullable, FlutterError *_Nullable))completion;
/// Returns the passed enum to test serialization and deserialization.
- (void)echoAnotherEnum:(FLTAnotherEnum)anotherEnum
             completion:(void (^)(FLTAnotherEnumBox *_Nullable, FlutterError *_Nullable))completion;
/// Returns the passed boolean, to test serialization and deserialization.
- (void)echoNullableBool:(nullable NSNumber *)aBool
              completion:(void (^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
/// Returns the passed int, to test serialization and deserialization.
- (void)echoNullableInt:(nullable NSNumber *)anInt
             completion:(void (^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
/// Returns the passed double, to test serialization and deserialization.
- (void)echoNullableDouble:(nullable NSNumber *)aDouble
                completion:(void (^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
/// Returns the passed string, to test serialization and deserialization.
- (void)echoNullableString:(nullable NSString *)aString
                completion:(void (^)(NSString *_Nullable, FlutterError *_Nullable))completion;
/// Returns the passed byte list, to test serialization and deserialization.
- (void)echoNullableUint8List:(nullable FlutterStandardTypedData *)list
                   completion:(void (^)(FlutterStandardTypedData *_Nullable,
                                        FlutterError *_Nullable))completion;
/// Returns the passed list, to test serialization and deserialization.
- (void)echoNullableList:(nullable NSArray<id> *)list
              completion:(void (^)(NSArray<id> *_Nullable, FlutterError *_Nullable))completion;
/// Returns the passed map, to test serialization and deserialization.
- (void)echoNullableMap:(nullable NSDictionary<NSString *, id> *)aMap
             completion:(void (^)(NSDictionary<NSString *, id> *_Nullable,
                                  FlutterError *_Nullable))completion;
/// Returns the passed enum to test serialization and deserialization.
- (void)echoNullableEnum:(nullable FLTAnEnumBox *)anEnumBoxed
              completion:(void (^)(FLTAnEnumBox *_Nullable, FlutterError *_Nullable))completion;
/// Returns the passed enum to test serialization and deserialization.
- (void)echoAnotherNullableEnum:(nullable FLTAnotherEnumBox *)anotherEnumBoxed
                     completion:(void (^)(FLTAnotherEnumBox *_Nullable,
                                          FlutterError *_Nullable))completion;
/// A no-op function taking no arguments and returning no value, to sanity
/// test basic asynchronous calling.
- (void)noopAsyncWithCompletion:(void (^)(FlutterError *_Nullable))completion;
/// Returns the passed in generic Object asynchronously.
- (void)echoAsyncString:(NSString *)aString
             completion:(void (^)(NSString *_Nullable, FlutterError *_Nullable))completion;
@end

/// An API that can be implemented for minimal, compile-only tests.
@protocol FLTHostTrivialApi
- (void)noopWithError:(FlutterError *_Nullable *_Nonnull)error;
@end

extern void SetUpFLTHostTrivialApi(id<FlutterBinaryMessenger> binaryMessenger,
                                   NSObject<FLTHostTrivialApi> *_Nullable api);

extern void SetUpFLTHostTrivialApiWithSuffix(id<FlutterBinaryMessenger> binaryMessenger,
                                             NSObject<FLTHostTrivialApi> *_Nullable api,
                                             NSString *messageChannelSuffix);

/// A simple API implemented in some unit tests.
@protocol FLTHostSmallApi
- (void)echoString:(NSString *)aString
        completion:(void (^)(NSString *_Nullable, FlutterError *_Nullable))completion;
- (void)voidVoidWithCompletion:(void (^)(FlutterError *_Nullable))completion;
@end

extern void SetUpFLTHostSmallApi(id<FlutterBinaryMessenger> binaryMessenger,
                                 NSObject<FLTHostSmallApi> *_Nullable api);

extern void SetUpFLTHostSmallApiWithSuffix(id<FlutterBinaryMessenger> binaryMessenger,
                                           NSObject<FLTHostSmallApi> *_Nullable api,
                                           NSString *messageChannelSuffix);

/// A simple API called in some unit tests.
@interface FLTFlutterSmallApi : NSObject
- (instancetype)initWithBinaryMessenger:(id<FlutterBinaryMessenger>)binaryMessenger;
- (instancetype)initWithBinaryMessenger:(id<FlutterBinaryMessenger>)binaryMessenger
                   messageChannelSuffix:(nullable NSString *)messageChannelSuffix;
- (void)echoWrappedList:(FLTTestMessage *)msg
             completion:(void (^)(FLTTestMessage *_Nullable, FlutterError *_Nullable))completion;
- (void)echoString:(NSString *)aString
        completion:(void (^)(NSString *_Nullable, FlutterError *_Nullable))completion;
@end

NS_ASSUME_NONNULL_END
