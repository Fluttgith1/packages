// Copyright 2013 The Flutter Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// Autogenerated from Pigeon, do not edit directly.
// See also: https://pub.dev/packages/pigeon

#import <Foundation/Foundation.h>

@protocol FlutterBinaryMessenger;
@protocol FlutterMessageCodec;
@class FlutterError;
@class FlutterStandardTypedData;

NS_ASSUME_NONNULL_BEGIN

typedef NS_ENUM(NSUInteger, ReplyType) {
  ReplyTypeSuccess = 0,
  ReplyTypeError = 1,
};

@class NonNullFieldSearchRequest;
@class ExtraData;
@class NonNullFieldSearchReply;

@interface NonNullFieldSearchRequest : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithQuery:(NSString *)query;
@property(nonatomic, copy) NSString *query;
@end

@interface ExtraData : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithDetailA:(NSString *)detailA detailB:(NSString *)detailB;
@property(nonatomic, copy) NSString *detailA;
@property(nonatomic, copy) NSString *detailB;
@end

@interface NonNullFieldSearchReply : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithResult:(NSString *)result
                         error:(NSString *)error
                       indices:(NSArray<NSNumber *> *)indices
                     extraData:(ExtraData *)extraData
                          type:(ReplyType)type;
@property(nonatomic, copy) NSString *result;
@property(nonatomic, copy) NSString *error;
@property(nonatomic, strong) NSArray<NSNumber *> *indices;
@property(nonatomic, strong) ExtraData *extraData;
@property(nonatomic, assign) ReplyType type;
@end

/// The codec used by NonNullFieldHostApi.
NSObject<FlutterMessageCodec> *NonNullFieldHostApiGetCodec(void);

@protocol NonNullFieldHostApi
/// @return `nil` only when `error != nil`.
- (nullable NonNullFieldSearchReply *)searchNested:(NonNullFieldSearchRequest *)nested
                                             error:(FlutterError *_Nullable *_Nonnull)error;
@end

extern void NonNullFieldHostApiSetup(id<FlutterBinaryMessenger> binaryMessenger,
                                     NSObject<NonNullFieldHostApi> *_Nullable api);

/// The codec used by NonNullFieldFlutterApi.
NSObject<FlutterMessageCodec> *NonNullFieldFlutterApiGetCodec(void);

@interface NonNullFieldFlutterApi : NSObject
- (instancetype)initWithBinaryMessenger:(id<FlutterBinaryMessenger>)binaryMessenger;
- (void)searchRequest:(NonNullFieldSearchRequest *)request
           completion:
               (void (^)(NonNullFieldSearchReply *_Nullable, FlutterError *_Nullable))completion;
@end

NS_ASSUME_NONNULL_END
