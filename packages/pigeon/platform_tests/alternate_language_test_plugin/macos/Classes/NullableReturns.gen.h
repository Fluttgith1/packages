// Copyright 2013 The Flutter Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// Autogenerated from Pigeon, do not edit directly.
// See also: https://pub.dev/packages/pigeon

#import <Foundation/Foundation.h>

@protocol FlutterBinaryMessenger;
@protocol FlutterMessageCodec;
@class FlutterError;
@class FlutterStandardTypedData;

NS_ASSUME_NONNULL_BEGIN

/// The codec used by NullableReturnHostApi.
NSObject<FlutterMessageCodec> *NullableReturnHostApiGetCodec(void);

@protocol NullableReturnHostApi
- (nullable NSNumber *)doitWithError:(FlutterError *_Nullable *_Nonnull)error;
@end

extern void NullableReturnHostApiSetup(id<FlutterBinaryMessenger> binaryMessenger,
                                       NSObject<NullableReturnHostApi> *_Nullable api);

/// The codec used by NullableReturnFlutterApi.
NSObject<FlutterMessageCodec> *NullableReturnFlutterApiGetCodec(void);

@interface NullableReturnFlutterApi : NSObject
- (instancetype)initWithBinaryMessenger:(id<FlutterBinaryMessenger>)binaryMessenger;
- (void)doitWithCompletion:(void (^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
@end

/// The codec used by NullableArgHostApi.
NSObject<FlutterMessageCodec> *NullableArgHostApiGetCodec(void);

@protocol NullableArgHostApi
/// @return `nil` only when `error != nil`.
- (nullable NSNumber *)doitX:(nullable NSNumber *)x error:(FlutterError *_Nullable *_Nonnull)error;
@end

extern void NullableArgHostApiSetup(id<FlutterBinaryMessenger> binaryMessenger,
                                    NSObject<NullableArgHostApi> *_Nullable api);

/// The codec used by NullableArgFlutterApi.
NSObject<FlutterMessageCodec> *NullableArgFlutterApiGetCodec(void);

@interface NullableArgFlutterApi : NSObject
- (instancetype)initWithBinaryMessenger:(id<FlutterBinaryMessenger>)binaryMessenger;
- (void)doitX:(nullable NSNumber *)x
    completion:(void (^)(NSNumber *_Nullable, FlutterError *_Nullable))completion;
@end

/// The codec used by NullableCollectionReturnHostApi.
NSObject<FlutterMessageCodec> *NullableCollectionReturnHostApiGetCodec(void);

@protocol NullableCollectionReturnHostApi
- (nullable NSArray<NSString *> *)doitWithError:(FlutterError *_Nullable *_Nonnull)error;
@end

extern void NullableCollectionReturnHostApiSetup(
    id<FlutterBinaryMessenger> binaryMessenger,
    NSObject<NullableCollectionReturnHostApi> *_Nullable api);

/// The codec used by NullableCollectionReturnFlutterApi.
NSObject<FlutterMessageCodec> *NullableCollectionReturnFlutterApiGetCodec(void);

@interface NullableCollectionReturnFlutterApi : NSObject
- (instancetype)initWithBinaryMessenger:(id<FlutterBinaryMessenger>)binaryMessenger;
- (void)doitWithCompletion:(void (^)(NSArray<NSString *> *_Nullable,
                                     FlutterError *_Nullable))completion;
@end

/// The codec used by NullableCollectionArgHostApi.
NSObject<FlutterMessageCodec> *NullableCollectionArgHostApiGetCodec(void);

@protocol NullableCollectionArgHostApi
/// @return `nil` only when `error != nil`.
- (nullable NSArray<NSString *> *)doitX:(nullable NSArray<NSString *> *)x
                                  error:(FlutterError *_Nullable *_Nonnull)error;
@end

extern void NullableCollectionArgHostApiSetup(
    id<FlutterBinaryMessenger> binaryMessenger,
    NSObject<NullableCollectionArgHostApi> *_Nullable api);

/// The codec used by NullableCollectionArgFlutterApi.
NSObject<FlutterMessageCodec> *NullableCollectionArgFlutterApiGetCodec(void);

@interface NullableCollectionArgFlutterApi : NSObject
- (instancetype)initWithBinaryMessenger:(id<FlutterBinaryMessenger>)binaryMessenger;
- (void)doitX:(nullable NSArray<NSString *> *)x
    completion:(void (^)(NSArray<NSString *> *_Nullable, FlutterError *_Nullable))completion;
@end

NS_ASSUME_NONNULL_END
