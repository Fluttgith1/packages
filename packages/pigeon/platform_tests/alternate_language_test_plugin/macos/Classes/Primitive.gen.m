// Copyright 2013 The Flutter Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// Autogenerated from Pigeon, do not edit directly.
// See also: https://pub.dev/packages/pigeon

#import "Primitive.gen.h"

#if TARGET_OS_OSX
#import <FlutterMacOS/FlutterMacOS.h>
#else
#import <Flutter/Flutter.h>
#endif

#if !__has_feature(objc_arc)
#error File requires ARC to be enabled.
#endif

static NSArray *wrapResult(id result, FlutterError *error) {
  if (error) {
    return @[
      error.code ?: [NSNull null], error.message ?: [NSNull null], error.details ?: [NSNull null]
    ];
  }
  return @[ result ?: [NSNull null] ];
}
static id GetNullableObjectAtIndex(NSArray *array, NSInteger key) {
  id result = array[key];
  return (result == [NSNull null]) ? nil : result;
}

NSObject<FlutterMessageCodec> *PrimitiveHostApiGetCodec(void) {
  static FlutterStandardMessageCodec *sSharedObject = nil;
  sSharedObject = [FlutterStandardMessageCodec sharedInstance];
  return sSharedObject;
}

void PrimitiveHostApiSetup(id<FlutterBinaryMessenger> binaryMessenger,
                           NSObject<PrimitiveHostApi> *api) {
  {
    FlutterBasicMessageChannel *channel = [[FlutterBasicMessageChannel alloc]
           initWithName:@"dev.flutter.pigeon.PrimitiveHostApi.anInt"
        binaryMessenger:binaryMessenger
                  codec:PrimitiveHostApiGetCodec()];
    if (api) {
      NSCAssert([api respondsToSelector:@selector(anIntValue:error:)],
                @"PrimitiveHostApi api (%@) doesn't respond to @selector(anIntValue:error:)", api);
      [channel setMessageHandler:^(id _Nullable message, FlutterReply callback) {
        NSArray *args = message;
        NSNumber *arg_value = GetNullableObjectAtIndex(args, 0);
        FlutterError *error;
        NSNumber *output = [api anIntValue:arg_value error:&error];
        callback(wrapResult(output, error));
      }];
    } else {
      [channel setMessageHandler:nil];
    }
  }
  {
    FlutterBasicMessageChannel *channel = [[FlutterBasicMessageChannel alloc]
           initWithName:@"dev.flutter.pigeon.PrimitiveHostApi.aBool"
        binaryMessenger:binaryMessenger
                  codec:PrimitiveHostApiGetCodec()];
    if (api) {
      NSCAssert([api respondsToSelector:@selector(aBoolValue:error:)],
                @"PrimitiveHostApi api (%@) doesn't respond to @selector(aBoolValue:error:)", api);
      [channel setMessageHandler:^(id _Nullable message, FlutterReply callback) {
        NSArray *args = message;
        NSNumber *arg_value = GetNullableObjectAtIndex(args, 0);
        FlutterError *error;
        NSNumber *output = [api aBoolValue:arg_value error:&error];
        callback(wrapResult(output, error));
      }];
    } else {
      [channel setMessageHandler:nil];
    }
  }
  {
    FlutterBasicMessageChannel *channel = [[FlutterBasicMessageChannel alloc]
           initWithName:@"dev.flutter.pigeon.PrimitiveHostApi.aString"
        binaryMessenger:binaryMessenger
                  codec:PrimitiveHostApiGetCodec()];
    if (api) {
      NSCAssert([api respondsToSelector:@selector(aStringValue:error:)],
                @"PrimitiveHostApi api (%@) doesn't respond to @selector(aStringValue:error:)",
                api);
      [channel setMessageHandler:^(id _Nullable message, FlutterReply callback) {
        NSArray *args = message;
        NSString *arg_value = GetNullableObjectAtIndex(args, 0);
        FlutterError *error;
        NSString *output = [api aStringValue:arg_value error:&error];
        callback(wrapResult(output, error));
      }];
    } else {
      [channel setMessageHandler:nil];
    }
  }
  {
    FlutterBasicMessageChannel *channel = [[FlutterBasicMessageChannel alloc]
           initWithName:@"dev.flutter.pigeon.PrimitiveHostApi.aDouble"
        binaryMessenger:binaryMessenger
                  codec:PrimitiveHostApiGetCodec()];
    if (api) {
      NSCAssert([api respondsToSelector:@selector(aDoubleValue:error:)],
                @"PrimitiveHostApi api (%@) doesn't respond to @selector(aDoubleValue:error:)",
                api);
      [channel setMessageHandler:^(id _Nullable message, FlutterReply callback) {
        NSArray *args = message;
        NSNumber *arg_value = GetNullableObjectAtIndex(args, 0);
        FlutterError *error;
        NSNumber *output = [api aDoubleValue:arg_value error:&error];
        callback(wrapResult(output, error));
      }];
    } else {
      [channel setMessageHandler:nil];
    }
  }
  {
    FlutterBasicMessageChannel *channel =
        [[FlutterBasicMessageChannel alloc] initWithName:@"dev.flutter.pigeon.PrimitiveHostApi.aMap"
                                         binaryMessenger:binaryMessenger
                                                   codec:PrimitiveHostApiGetCodec()];
    if (api) {
      NSCAssert([api respondsToSelector:@selector(aMapValue:error:)],
                @"PrimitiveHostApi api (%@) doesn't respond to @selector(aMapValue:error:)", api);
      [channel setMessageHandler:^(id _Nullable message, FlutterReply callback) {
        NSArray *args = message;
        NSDictionary *arg_value = GetNullableObjectAtIndex(args, 0);
        FlutterError *error;
        NSDictionary *output = [api aMapValue:arg_value error:&error];
        callback(wrapResult(output, error));
      }];
    } else {
      [channel setMessageHandler:nil];
    }
  }
  {
    FlutterBasicMessageChannel *channel = [[FlutterBasicMessageChannel alloc]
           initWithName:@"dev.flutter.pigeon.PrimitiveHostApi.aList"
        binaryMessenger:binaryMessenger
                  codec:PrimitiveHostApiGetCodec()];
    if (api) {
      NSCAssert([api respondsToSelector:@selector(aListValue:error:)],
                @"PrimitiveHostApi api (%@) doesn't respond to @selector(aListValue:error:)", api);
      [channel setMessageHandler:^(id _Nullable message, FlutterReply callback) {
        NSArray *args = message;
        NSArray *arg_value = GetNullableObjectAtIndex(args, 0);
        FlutterError *error;
        NSArray *output = [api aListValue:arg_value error:&error];
        callback(wrapResult(output, error));
      }];
    } else {
      [channel setMessageHandler:nil];
    }
  }
  {
    FlutterBasicMessageChannel *channel = [[FlutterBasicMessageChannel alloc]
           initWithName:@"dev.flutter.pigeon.PrimitiveHostApi.anInt32List"
        binaryMessenger:binaryMessenger
                  codec:PrimitiveHostApiGetCodec()];
    if (api) {
      NSCAssert([api respondsToSelector:@selector(anInt32ListValue:error:)],
                @"PrimitiveHostApi api (%@) doesn't respond to @selector(anInt32ListValue:error:)",
                api);
      [channel setMessageHandler:^(id _Nullable message, FlutterReply callback) {
        NSArray *args = message;
        FlutterStandardTypedData *arg_value = GetNullableObjectAtIndex(args, 0);
        FlutterError *error;
        FlutterStandardTypedData *output = [api anInt32ListValue:arg_value error:&error];
        callback(wrapResult(output, error));
      }];
    } else {
      [channel setMessageHandler:nil];
    }
  }
  {
    FlutterBasicMessageChannel *channel = [[FlutterBasicMessageChannel alloc]
           initWithName:@"dev.flutter.pigeon.PrimitiveHostApi.aBoolList"
        binaryMessenger:binaryMessenger
                  codec:PrimitiveHostApiGetCodec()];
    if (api) {
      NSCAssert([api respondsToSelector:@selector(aBoolListValue:error:)],
                @"PrimitiveHostApi api (%@) doesn't respond to @selector(aBoolListValue:error:)",
                api);
      [channel setMessageHandler:^(id _Nullable message, FlutterReply callback) {
        NSArray *args = message;
        NSArray<NSNumber *> *arg_value = GetNullableObjectAtIndex(args, 0);
        FlutterError *error;
        NSArray<NSNumber *> *output = [api aBoolListValue:arg_value error:&error];
        callback(wrapResult(output, error));
      }];
    } else {
      [channel setMessageHandler:nil];
    }
  }
  {
    FlutterBasicMessageChannel *channel = [[FlutterBasicMessageChannel alloc]
           initWithName:@"dev.flutter.pigeon.PrimitiveHostApi.aStringIntMap"
        binaryMessenger:binaryMessenger
                  codec:PrimitiveHostApiGetCodec()];
    if (api) {
      NSCAssert(
          [api respondsToSelector:@selector(aStringIntMapValue:error:)],
          @"PrimitiveHostApi api (%@) doesn't respond to @selector(aStringIntMapValue:error:)",
          api);
      [channel setMessageHandler:^(id _Nullable message, FlutterReply callback) {
        NSArray *args = message;
        NSDictionary<NSString *, NSNumber *> *arg_value = GetNullableObjectAtIndex(args, 0);
        FlutterError *error;
        NSDictionary<NSString *, NSNumber *> *output = [api aStringIntMapValue:arg_value
                                                                         error:&error];
        callback(wrapResult(output, error));
      }];
    } else {
      [channel setMessageHandler:nil];
    }
  }
}
NSObject<FlutterMessageCodec> *PrimitiveFlutterApiGetCodec(void) {
  static FlutterStandardMessageCodec *sSharedObject = nil;
  sSharedObject = [FlutterStandardMessageCodec sharedInstance];
  return sSharedObject;
}

@interface PrimitiveFlutterApi ()
@property(nonatomic, strong) NSObject<FlutterBinaryMessenger> *binaryMessenger;
@end

@implementation PrimitiveFlutterApi

- (instancetype)initWithBinaryMessenger:(NSObject<FlutterBinaryMessenger> *)binaryMessenger {
  self = [super init];
  if (self) {
    _binaryMessenger = binaryMessenger;
  }
  return self;
}
- (void)anIntValue:(NSNumber *)arg_value
        completion:(void (^)(NSNumber *_Nullable, FlutterError *_Nullable))completion {
  FlutterBasicMessageChannel *channel = [FlutterBasicMessageChannel
      messageChannelWithName:@"dev.flutter.pigeon.PrimitiveFlutterApi.anInt"
             binaryMessenger:self.binaryMessenger
                       codec:PrimitiveFlutterApiGetCodec()];
  [channel sendMessage:@[ arg_value ?: [NSNull null] ]
                 reply:^(id reply) {
                   NSNumber *output = reply;
                   completion(output, nil);
                 }];
}
- (void)aBoolValue:(NSNumber *)arg_value
        completion:(void (^)(NSNumber *_Nullable, FlutterError *_Nullable))completion {
  FlutterBasicMessageChannel *channel = [FlutterBasicMessageChannel
      messageChannelWithName:@"dev.flutter.pigeon.PrimitiveFlutterApi.aBool"
             binaryMessenger:self.binaryMessenger
                       codec:PrimitiveFlutterApiGetCodec()];
  [channel sendMessage:@[ arg_value ?: [NSNull null] ]
                 reply:^(id reply) {
                   NSNumber *output = reply;
                   completion(output, nil);
                 }];
}
- (void)aStringValue:(NSString *)arg_value
          completion:(void (^)(NSString *_Nullable, FlutterError *_Nullable))completion {
  FlutterBasicMessageChannel *channel = [FlutterBasicMessageChannel
      messageChannelWithName:@"dev.flutter.pigeon.PrimitiveFlutterApi.aString"
             binaryMessenger:self.binaryMessenger
                       codec:PrimitiveFlutterApiGetCodec()];
  [channel sendMessage:@[ arg_value ?: [NSNull null] ]
                 reply:^(id reply) {
                   NSString *output = reply;
                   completion(output, nil);
                 }];
}
- (void)aDoubleValue:(NSNumber *)arg_value
          completion:(void (^)(NSNumber *_Nullable, FlutterError *_Nullable))completion {
  FlutterBasicMessageChannel *channel = [FlutterBasicMessageChannel
      messageChannelWithName:@"dev.flutter.pigeon.PrimitiveFlutterApi.aDouble"
             binaryMessenger:self.binaryMessenger
                       codec:PrimitiveFlutterApiGetCodec()];
  [channel sendMessage:@[ arg_value ?: [NSNull null] ]
                 reply:^(id reply) {
                   NSNumber *output = reply;
                   completion(output, nil);
                 }];
}
- (void)aMapValue:(NSDictionary *)arg_value
       completion:(void (^)(NSDictionary *_Nullable, FlutterError *_Nullable))completion {
  FlutterBasicMessageChannel *channel = [FlutterBasicMessageChannel
      messageChannelWithName:@"dev.flutter.pigeon.PrimitiveFlutterApi.aMap"
             binaryMessenger:self.binaryMessenger
                       codec:PrimitiveFlutterApiGetCodec()];
  [channel sendMessage:@[ arg_value ?: [NSNull null] ]
                 reply:^(id reply) {
                   NSDictionary *output = reply;
                   completion(output, nil);
                 }];
}
- (void)aListValue:(NSArray *)arg_value
        completion:(void (^)(NSArray *_Nullable, FlutterError *_Nullable))completion {
  FlutterBasicMessageChannel *channel = [FlutterBasicMessageChannel
      messageChannelWithName:@"dev.flutter.pigeon.PrimitiveFlutterApi.aList"
             binaryMessenger:self.binaryMessenger
                       codec:PrimitiveFlutterApiGetCodec()];
  [channel sendMessage:@[ arg_value ?: [NSNull null] ]
                 reply:^(id reply) {
                   NSArray *output = reply;
                   completion(output, nil);
                 }];
}
- (void)anInt32ListValue:(FlutterStandardTypedData *)arg_value
              completion:(void (^)(FlutterStandardTypedData *_Nullable,
                                   FlutterError *_Nullable))completion {
  FlutterBasicMessageChannel *channel = [FlutterBasicMessageChannel
      messageChannelWithName:@"dev.flutter.pigeon.PrimitiveFlutterApi.anInt32List"
             binaryMessenger:self.binaryMessenger
                       codec:PrimitiveFlutterApiGetCodec()];
  [channel sendMessage:@[ arg_value ?: [NSNull null] ]
                 reply:^(id reply) {
                   FlutterStandardTypedData *output = reply;
                   completion(output, nil);
                 }];
}
- (void)aBoolListValue:(NSArray<NSNumber *> *)arg_value
            completion:
                (void (^)(NSArray<NSNumber *> *_Nullable, FlutterError *_Nullable))completion {
  FlutterBasicMessageChannel *channel = [FlutterBasicMessageChannel
      messageChannelWithName:@"dev.flutter.pigeon.PrimitiveFlutterApi.aBoolList"
             binaryMessenger:self.binaryMessenger
                       codec:PrimitiveFlutterApiGetCodec()];
  [channel sendMessage:@[ arg_value ?: [NSNull null] ]
                 reply:^(id reply) {
                   NSArray<NSNumber *> *output = reply;
                   completion(output, nil);
                 }];
}
- (void)aStringIntMapValue:(NSDictionary<NSString *, NSNumber *> *)arg_value
                completion:(void (^)(NSDictionary<NSString *, NSNumber *> *_Nullable,
                                     FlutterError *_Nullable))completion {
  FlutterBasicMessageChannel *channel = [FlutterBasicMessageChannel
      messageChannelWithName:@"dev.flutter.pigeon.PrimitiveFlutterApi.aStringIntMap"
             binaryMessenger:self.binaryMessenger
                       codec:PrimitiveFlutterApiGetCodec()];
  [channel sendMessage:@[ arg_value ?: [NSNull null] ]
                 reply:^(id reply) {
                   NSDictionary<NSString *, NSNumber *> *output = reply;
                   completion(output, nil);
                 }];
}
@end
