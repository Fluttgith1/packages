// Mocks generated by Mockito 5.4.4 from annotations
// in shared_preferences_tool/test/src/shared_preferences_state_notifier_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;
import 'package:shared_preferences_tool/src/shared_preferences_state.dart'
    as _i4;
import 'package:shared_preferences_tool/src/shared_preferences_tool_eval.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [SharedPreferencesToolEval].
///
/// See the documentation for Mockito's code generation for more information.
class MockSharedPreferencesToolEval extends _i1.Mock
    implements _i2.SharedPreferencesToolEval {
  @override
  _i3.Future<List<String>> fetchAllKeys() => (super.noSuchMethod(
        Invocation.method(
          #fetchAllKeys,
          [],
        ),
        returnValue: _i3.Future<List<String>>.value(<String>[]),
        returnValueForMissingStub: _i3.Future<List<String>>.value(<String>[]),
      ) as _i3.Future<List<String>>);

  @override
  _i3.Future<_i4.SharedPreferencesData> fetchValue(String? key) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchValue,
          [key],
        ),
        returnValue: _i3.Future<_i4.SharedPreferencesData>.value(
            _i5.dummyValue<_i4.SharedPreferencesData>(
          this,
          Invocation.method(
            #fetchValue,
            [key],
          ),
        )),
        returnValueForMissingStub: _i3.Future<_i4.SharedPreferencesData>.value(
            _i5.dummyValue<_i4.SharedPreferencesData>(
          this,
          Invocation.method(
            #fetchValue,
            [key],
          ),
        )),
      ) as _i3.Future<_i4.SharedPreferencesData>);

  @override
  _i3.Future<void> changeValue(
    String? key,
    _i4.SharedPreferencesData? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #changeValue,
          [
            key,
            value,
          ],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  _i3.Future<void> deleteKey(String? key) => (super.noSuchMethod(
        Invocation.method(
          #deleteKey,
          [key],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
